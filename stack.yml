Resources:
  hyperswitchvpc6E98958A:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.63.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/Resource
  hyperswitchvpcpublicsubnet1Subnet1Subnet43D256C4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1/Subnet
  hyperswitchvpcpublicsubnet1Subnet1RouteTable0C4CDC68:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1/RouteTable
  hyperswitchvpcpublicsubnet1Subnet1RouteTableAssociation7C6AAE20:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1RouteTable0C4CDC68
      SubnetId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1Subnet43D256C4
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1/RouteTableAssociation
  hyperswitchvpcpublicsubnet1Subnet1DefaultRoute9CB4C458:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: hyperswitchvpcIGW690843C4
      RouteTableId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1RouteTable0C4CDC68
    DependsOn:
      - hyperswitchvpcVPCGW45D765DA
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1/DefaultRoute
  hyperswitchvpcpublicsubnet1Subnet1EIP22FE0BC1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1/EIP
  hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - hyperswitchvpcpublicsubnet1Subnet1EIP22FE0BC1
          - AllocationId
      SubnetId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1Subnet43D256C4
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    DependsOn:
      - hyperswitchvpcpublicsubnet1Subnet1DefaultRoute9CB4C458
      - hyperswitchvpcpublicsubnet1Subnet1RouteTableAssociation7C6AAE20
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet1/NATGateway
  hyperswitchvpcpublicsubnet1Subnet2Subnet0C955FE9:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2/Subnet
  hyperswitchvpcpublicsubnet1Subnet2RouteTable21521D41:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2/RouteTable
  hyperswitchvpcpublicsubnet1Subnet2RouteTableAssociation6E52BC2D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2RouteTable21521D41
      SubnetId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2Subnet0C955FE9
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2/RouteTableAssociation
  hyperswitchvpcpublicsubnet1Subnet2DefaultRouteD1E33909:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: hyperswitchvpcIGW690843C4
      RouteTableId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2RouteTable21521D41
    DependsOn:
      - hyperswitchvpcVPCGW45D765DA
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2/DefaultRoute
  hyperswitchvpcpublicsubnet1Subnet2EIP3E95D076:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2/EIP
  hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - hyperswitchvpcpublicsubnet1Subnet2EIP3E95D076
          - AllocationId
      SubnetId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2Subnet0C955FE9
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    DependsOn:
      - hyperswitchvpcpublicsubnet1Subnet2DefaultRouteD1E33909
      - hyperswitchvpcpublicsubnet1Subnet2RouteTableAssociation6E52BC2D
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/public-subnet-1Subnet2/NATGateway
  hyperswitchvpcisolatedsubnet1Subnet1Subnet9D47908C:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet1/Subnet
  hyperswitchvpcisolatedsubnet1Subnet1RouteTableF564B640:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet1/RouteTable
  hyperswitchvpcisolatedsubnet1Subnet1RouteTableAssociation016319F7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcisolatedsubnet1Subnet1RouteTableF564B640
      SubnetId:
        Ref: hyperswitchvpcisolatedsubnet1Subnet1Subnet9D47908C
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet1/RouteTableAssociation
  hyperswitchvpcisolatedsubnet1Subnet1DefaultRoute802D1807:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcisolatedsubnet1Subnet1RouteTableF564B640
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet1/DefaultRoute
  hyperswitchvpcisolatedsubnet1Subnet2SubnetC00C52E2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet2/Subnet
  hyperswitchvpcisolatedsubnet1Subnet2RouteTable47634573:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet2/RouteTable
  hyperswitchvpcisolatedsubnet1Subnet2RouteTableAssociationFB26520C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcisolatedsubnet1Subnet2RouteTable47634573
      SubnetId:
        Ref: hyperswitchvpcisolatedsubnet1Subnet2SubnetC00C52E2
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet2/RouteTableAssociation
  hyperswitchvpcisolatedsubnet1Subnet2DefaultRoute2CE9B616:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcisolatedsubnet1Subnet2RouteTable47634573
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/isolated-subnet-1Subnet2/DefaultRoute
  hyperswitchvpcdatabaseisolatedsubnet1Subnet1Subnet1000CDE4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: database-isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet1/Subnet
  hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTable02F70E2B:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet1/RouteTable
  hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTableAssociationE41F3146:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTable02F70E2B
      SubnetId:
        Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet1Subnet1000CDE4
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet1/RouteTableAssociation
  hyperswitchvpcdatabaseisolatedsubnet1Subnet1DefaultRoute97005569:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTable02F70E2B
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet1/DefaultRoute
  hyperswitchvpcdatabaseisolatedsubnet1Subnet2SubnetFE5772F2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.5.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: database-isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet2/Subnet
  hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableE4719469:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet2/RouteTable
  hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableAssociation3B2036CD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableE4719469
      SubnetId:
        Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet2SubnetFE5772F2
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet2/RouteTableAssociation
  hyperswitchvpcdatabaseisolatedsubnet1Subnet2DefaultRoute826D7857:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableE4719469
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-isolated-subnet-1Subnet2/DefaultRoute
  hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.8.0/22
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: eks-worker-nodes-one-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet1/Subnet
  hyperswitchvpceksworkernodesonezoneSubnet1RouteTable391C093D:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet1/RouteTable
  hyperswitchvpceksworkernodesonezoneSubnet1RouteTableAssociation131D95AF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpceksworkernodesonezoneSubnet1RouteTable391C093D
      SubnetId:
        Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet1/RouteTableAssociation
  hyperswitchvpceksworkernodesonezoneSubnet1DefaultRoute5F97D10F:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpceksworkernodesonezoneSubnet1RouteTable391C093D
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet1/DefaultRoute
  hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.12.0/22
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: eks-worker-nodes-one-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet2/Subnet
  hyperswitchvpceksworkernodesonezoneSubnet2RouteTable9FB068B2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet2/RouteTable
  hyperswitchvpceksworkernodesonezoneSubnet2RouteTableAssociation7FBA51C8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpceksworkernodesonezoneSubnet2RouteTable9FB068B2
      SubnetId:
        Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet2/RouteTableAssociation
  hyperswitchvpceksworkernodesonezoneSubnet2DefaultRouteD75B6ED2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpceksworkernodesonezoneSubnet2RouteTable9FB068B2
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-worker-nodes-one-zoneSubnet2/DefaultRoute
  hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.16.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: utils-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/utils-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/utils-zoneSubnet1/Subnet
  hyperswitchvpcutilszoneSubnet1RouteTable343BF850:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/utils-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/utils-zoneSubnet1/RouteTable
  hyperswitchvpcutilszoneSubnet1RouteTableAssociation475FCA2B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcutilszoneSubnet1RouteTable343BF850
      SubnetId:
        Ref: hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/utils-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcutilszoneSubnet1DefaultRoute9B482EAD:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcutilszoneSubnet1RouteTable343BF850
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/utils-zoneSubnet1/DefaultRoute
  hyperswitchvpcutilszoneSubnet2Subnet54FB18DF:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.17.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: utils-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/utils-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/utils-zoneSubnet2/Subnet
  hyperswitchvpcutilszoneSubnet2RouteTable7D41147C:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/utils-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/utils-zoneSubnet2/RouteTable
  hyperswitchvpcutilszoneSubnet2RouteTableAssociationC0B047AC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcutilszoneSubnet2RouteTable7D41147C
      SubnetId:
        Ref: hyperswitchvpcutilszoneSubnet2Subnet54FB18DF
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/utils-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcutilszoneSubnet2DefaultRouteB77BFA40:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcutilszoneSubnet2RouteTable7D41147C
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/utils-zoneSubnet2/DefaultRoute
  hyperswitchvpcmanagementzoneSubnet1SubnetEEE4E472:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.18.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: management-zone
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/management-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/management-zoneSubnet1/Subnet
  hyperswitchvpcmanagementzoneSubnet1RouteTableD6132081:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/management-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/management-zoneSubnet1/RouteTable
  hyperswitchvpcmanagementzoneSubnet1RouteTableAssociation34C82326:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcmanagementzoneSubnet1RouteTableD6132081
      SubnetId:
        Ref: hyperswitchvpcmanagementzoneSubnet1SubnetEEE4E472
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/management-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcmanagementzoneSubnet1DefaultRoute7FA78714:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: hyperswitchvpcIGW690843C4
      RouteTableId:
        Ref: hyperswitchvpcmanagementzoneSubnet1RouteTableD6132081
    DependsOn:
      - hyperswitchvpcVPCGW45D765DA
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/management-zoneSubnet1/DefaultRoute
  hyperswitchvpcmanagementzoneSubnet2Subnet5AE7CDC4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.19.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: management-zone
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/management-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/management-zoneSubnet2/Subnet
  hyperswitchvpcmanagementzoneSubnet2RouteTable329E1D69:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/management-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/management-zoneSubnet2/RouteTable
  hyperswitchvpcmanagementzoneSubnet2RouteTableAssociation8512B695:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcmanagementzoneSubnet2RouteTable329E1D69
      SubnetId:
        Ref: hyperswitchvpcmanagementzoneSubnet2Subnet5AE7CDC4
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/management-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcmanagementzoneSubnet2DefaultRoute293BF425:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: hyperswitchvpcIGW690843C4
      RouteTableId:
        Ref: hyperswitchvpcmanagementzoneSubnet2RouteTable329E1D69
    DependsOn:
      - hyperswitchvpcVPCGW45D765DA
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/management-zoneSubnet2/DefaultRoute
  hyperswitchvpclockerdatabasezoneSubnet1Subnet3CAE1D64:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.20.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: locker-database-zone
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet1/Subnet
  hyperswitchvpclockerdatabasezoneSubnet1RouteTableFBE2F9CA:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet1/RouteTable
  hyperswitchvpclockerdatabasezoneSubnet1RouteTableAssociation4675820C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpclockerdatabasezoneSubnet1RouteTableFBE2F9CA
      SubnetId:
        Ref: hyperswitchvpclockerdatabasezoneSubnet1Subnet3CAE1D64
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet1/RouteTableAssociation
  hyperswitchvpclockerdatabasezoneSubnet2Subnet3578500C:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.21.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: locker-database-zone
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet2/Subnet
  hyperswitchvpclockerdatabasezoneSubnet2RouteTableA677358E:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet2/RouteTable
  hyperswitchvpclockerdatabasezoneSubnet2RouteTableAssociation690CC83A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpclockerdatabasezoneSubnet2RouteTableA677358E
      SubnetId:
        Ref: hyperswitchvpclockerdatabasezoneSubnet2Subnet3578500C
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-database-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcservicelayerzoneSubnet1SubnetD1393109:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.22.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: service-layer-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet1/Subnet
  hyperswitchvpcservicelayerzoneSubnet1RouteTable5B412BEC:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet1/RouteTable
  hyperswitchvpcservicelayerzoneSubnet1RouteTableAssociation3BCB92BC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcservicelayerzoneSubnet1RouteTable5B412BEC
      SubnetId:
        Ref: hyperswitchvpcservicelayerzoneSubnet1SubnetD1393109
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcservicelayerzoneSubnet1DefaultRoute6730B405:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcservicelayerzoneSubnet1RouteTable5B412BEC
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet1/DefaultRoute
  hyperswitchvpcservicelayerzoneSubnet2SubnetC7472100:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.23.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: service-layer-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet2/Subnet
  hyperswitchvpcservicelayerzoneSubnet2RouteTable3FB66943:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet2/RouteTable
  hyperswitchvpcservicelayerzoneSubnet2RouteTableAssociation5B74F829:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcservicelayerzoneSubnet2RouteTable3FB66943
      SubnetId:
        Ref: hyperswitchvpcservicelayerzoneSubnet2SubnetC7472100
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcservicelayerzoneSubnet2DefaultRoute73A66C31:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcservicelayerzoneSubnet2RouteTable3FB66943
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/service-layer-zoneSubnet2/DefaultRoute
  hyperswitchvpcdatastackzoneSubnet1Subnet018585ED:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.24.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: data-stack-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet1/Subnet
  hyperswitchvpcdatastackzoneSubnet1RouteTable87E77B2D:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet1/RouteTable
  hyperswitchvpcdatastackzoneSubnet1RouteTableAssociation41ED099A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcdatastackzoneSubnet1RouteTable87E77B2D
      SubnetId:
        Ref: hyperswitchvpcdatastackzoneSubnet1Subnet018585ED
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcdatastackzoneSubnet1DefaultRouteC53DC630:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcdatastackzoneSubnet1RouteTable87E77B2D
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet1/DefaultRoute
  hyperswitchvpcdatastackzoneSubnet2Subnet262C301A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.25.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: data-stack-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet2/Subnet
  hyperswitchvpcdatastackzoneSubnet2RouteTableDF6EDADC:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet2/RouteTable
  hyperswitchvpcdatastackzoneSubnet2RouteTableAssociation42A8233D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcdatastackzoneSubnet2RouteTableDF6EDADC
      SubnetId:
        Ref: hyperswitchvpcdatastackzoneSubnet2Subnet262C301A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcdatastackzoneSubnet2DefaultRoute561F56A5:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcdatastackzoneSubnet2RouteTableDF6EDADC
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/data-stack-zoneSubnet2/DefaultRoute
  hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.26.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: external-incoming-zone
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet1/Subnet
  hyperswitchvpcexternalincomingzoneSubnet1RouteTableA40E4EAD:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet1/RouteTable
  hyperswitchvpcexternalincomingzoneSubnet1RouteTableAssociationC9451618:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcexternalincomingzoneSubnet1RouteTableA40E4EAD
      SubnetId:
        Ref: hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcexternalincomingzoneSubnet1DefaultRoute2F32AE05:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: hyperswitchvpcIGW690843C4
      RouteTableId:
        Ref: hyperswitchvpcexternalincomingzoneSubnet1RouteTableA40E4EAD
    DependsOn:
      - hyperswitchvpcVPCGW45D765DA
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet1/DefaultRoute
  hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.27.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: external-incoming-zone
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet2/Subnet
  hyperswitchvpcexternalincomingzoneSubnet2RouteTable018A90E4:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet2/RouteTable
  hyperswitchvpcexternalincomingzoneSubnet2RouteTableAssociation22321931:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcexternalincomingzoneSubnet2RouteTable018A90E4
      SubnetId:
        Ref: hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcexternalincomingzoneSubnet2DefaultRoute2EDBCE30:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: hyperswitchvpcIGW690843C4
      RouteTableId:
        Ref: hyperswitchvpcexternalincomingzoneSubnet2RouteTable018A90E4
    DependsOn:
      - hyperswitchvpcVPCGW45D765DA
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/external-incoming-zoneSubnet2/DefaultRoute
  hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.28.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: database-zone
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/database-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-zoneSubnet1/Subnet
  hyperswitchvpcdatabasezoneSubnet1RouteTableD2EC564B:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/database-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-zoneSubnet1/RouteTable
  hyperswitchvpcdatabasezoneSubnet1RouteTableAssociationBEA5DF69:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcdatabasezoneSubnet1RouteTableD2EC564B
      SubnetId:
        Ref: hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.29.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: database-zone
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/database-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-zoneSubnet2/Subnet
  hyperswitchvpcdatabasezoneSubnet2RouteTableED60F558:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/database-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-zoneSubnet2/RouteTable
  hyperswitchvpcdatabasezoneSubnet2RouteTableAssociationC3BEE407:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcdatabasezoneSubnet2RouteTableED60F558
      SubnetId:
        Ref: hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/database-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcoutgoingproxylbzoneSubnet1Subnet40541EC1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.30.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: outgoing-proxy-lb-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet1/Subnet
  hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableA6A1CF9A:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet1/RouteTable
  hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableAssociationB6D4065B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableA6A1CF9A
      SubnetId:
        Ref: hyperswitchvpcoutgoingproxylbzoneSubnet1Subnet40541EC1
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcoutgoingproxylbzoneSubnet1DefaultRoute1443EB0F:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableA6A1CF9A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet1/DefaultRoute
  hyperswitchvpcoutgoingproxylbzoneSubnet2Subnet5B702C5A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.31.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: outgoing-proxy-lb-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet2/Subnet
  hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTable27804EB0:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet2/RouteTable
  hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTableAssociation2EF14CD1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTable27804EB0
      SubnetId:
        Ref: hyperswitchvpcoutgoingproxylbzoneSubnet2Subnet5B702C5A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcoutgoingproxylbzoneSubnet2DefaultRouteEDD5BFA5:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTable27804EB0
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-lb-zoneSubnet2/DefaultRoute
  hyperswitchvpcoutgoingproxyzoneSubnet1Subnet5C2645ED:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.32.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: outgoing-proxy-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet1/Subnet
  hyperswitchvpcoutgoingproxyzoneSubnet1RouteTable2C38063F:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet1/RouteTable
  hyperswitchvpcoutgoingproxyzoneSubnet1RouteTableAssociation35BEB283:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcoutgoingproxyzoneSubnet1RouteTable2C38063F
      SubnetId:
        Ref: hyperswitchvpcoutgoingproxyzoneSubnet1Subnet5C2645ED
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcoutgoingproxyzoneSubnet1DefaultRouteA24C159F:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcoutgoingproxyzoneSubnet1RouteTable2C38063F
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet1/DefaultRoute
  hyperswitchvpcoutgoingproxyzoneSubnet2Subnet9CEF0CD5:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.33.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: outgoing-proxy-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet2/Subnet
  hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableFCB35384:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet2/RouteTable
  hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableAssociation8046B8EF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableFCB35384
      SubnetId:
        Ref: hyperswitchvpcoutgoingproxyzoneSubnet2Subnet9CEF0CD5
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcoutgoingproxyzoneSubnet2DefaultRouteE4741B9D:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableFCB35384
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/outgoing-proxy-zoneSubnet2/DefaultRoute
  hyperswitchvpclockerserverzoneSubnet1SubnetB48EAB73:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.34.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: locker-server-zone
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet1/Subnet
  hyperswitchvpclockerserverzoneSubnet1RouteTable84449A93:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet1/RouteTable
  hyperswitchvpclockerserverzoneSubnet1RouteTableAssociationE97AB2FE:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpclockerserverzoneSubnet1RouteTable84449A93
      SubnetId:
        Ref: hyperswitchvpclockerserverzoneSubnet1SubnetB48EAB73
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet1/RouteTableAssociation
  hyperswitchvpclockerserverzoneSubnet2SubnetD8EB827D:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.35.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: locker-server-zone
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet2/Subnet
  hyperswitchvpclockerserverzoneSubnet2RouteTable995B0544:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet2/RouteTable
  hyperswitchvpclockerserverzoneSubnet2RouteTableAssociationB2465344:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpclockerserverzoneSubnet2RouteTable995B0544
      SubnetId:
        Ref: hyperswitchvpclockerserverzoneSubnet2SubnetD8EB827D
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/locker-server-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcelasticachezoneSubnet1SubnetB39F1526:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.36.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: elasticache-zone
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet1/Subnet
  hyperswitchvpcelasticachezoneSubnet1RouteTable595C60D8:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet1/RouteTable
  hyperswitchvpcelasticachezoneSubnet1RouteTableAssociation810D9AEB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcelasticachezoneSubnet1RouteTable595C60D8
      SubnetId:
        Ref: hyperswitchvpcelasticachezoneSubnet1SubnetB39F1526
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcelasticachezoneSubnet2Subnet369E0A13:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.37.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: elasticache-zone
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet2/Subnet
  hyperswitchvpcelasticachezoneSubnet2RouteTableCDBE3EE2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet2/RouteTable
  hyperswitchvpcelasticachezoneSubnet2RouteTableAssociationFBACCDB2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcelasticachezoneSubnet2RouteTableCDBE3EE2
      SubnetId:
        Ref: hyperswitchvpcelasticachezoneSubnet2Subnet369E0A13
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/elasticache-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcincomingnpcizoneSubnet1Subnet54063BB1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.38.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: incoming-npci-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet1/Subnet
  hyperswitchvpcincomingnpcizoneSubnet1RouteTableD1A7BD32:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet1/RouteTable
  hyperswitchvpcincomingnpcizoneSubnet1RouteTableAssociationD032C523:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcincomingnpcizoneSubnet1RouteTableD1A7BD32
      SubnetId:
        Ref: hyperswitchvpcincomingnpcizoneSubnet1Subnet54063BB1
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcincomingnpcizoneSubnet1DefaultRoute372C3BB8:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcincomingnpcizoneSubnet1RouteTableD1A7BD32
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet1/DefaultRoute
  hyperswitchvpcincomingnpcizoneSubnet2Subnet7E780622:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.39.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: incoming-npci-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet2/Subnet
  hyperswitchvpcincomingnpcizoneSubnet2RouteTableEBA207F5:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet2/RouteTable
  hyperswitchvpcincomingnpcizoneSubnet2RouteTableAssociation19D1B984:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcincomingnpcizoneSubnet2RouteTableEBA207F5
      SubnetId:
        Ref: hyperswitchvpcincomingnpcizoneSubnet2Subnet7E780622
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcincomingnpcizoneSubnet2DefaultRouteC9C00B85:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcincomingnpcizoneSubnet2RouteTableEBA207F5
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-npci-zoneSubnet2/DefaultRoute
  hyperswitchvpcekscontrolplanezoneSubnet1Subnet20A5BC9A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.40.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: eks-control-plane-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet1/Subnet
  hyperswitchvpcekscontrolplanezoneSubnet1RouteTable993E6DEF:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet1/RouteTable
  hyperswitchvpcekscontrolplanezoneSubnet1RouteTableAssociationA248CBC7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcekscontrolplanezoneSubnet1RouteTable993E6DEF
      SubnetId:
        Ref: hyperswitchvpcekscontrolplanezoneSubnet1Subnet20A5BC9A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcekscontrolplanezoneSubnet1DefaultRouteE2AD666B:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcekscontrolplanezoneSubnet1RouteTable993E6DEF
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet1/DefaultRoute
  hyperswitchvpcekscontrolplanezoneSubnet2Subnet0DFFA8A8:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.41.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: eks-control-plane-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet2/Subnet
  hyperswitchvpcekscontrolplanezoneSubnet2RouteTable01F459C5:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet2/RouteTable
  hyperswitchvpcekscontrolplanezoneSubnet2RouteTableAssociationBA3CECAF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcekscontrolplanezoneSubnet2RouteTable01F459C5
      SubnetId:
        Ref: hyperswitchvpcekscontrolplanezoneSubnet2Subnet0DFFA8A8
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcekscontrolplanezoneSubnet2DefaultRoute9117D2BA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcekscontrolplanezoneSubnet2RouteTable01F459C5
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/eks-control-plane-zoneSubnet2/DefaultRoute
  hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1a
      CidrBlock: 10.63.42.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: incoming-web-envoy-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet1/Subnet
  hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTable233FC848:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet1
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet1/RouteTable
  hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTableAssociation6F4D882C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTable233FC848
      SubnetId:
        Ref: hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet1/RouteTableAssociation
  hyperswitchvpcincomingwebenvoyzoneSubnet1DefaultRouteE2419C31:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      RouteTableId:
        Ref: hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTable233FC848
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet1/DefaultRoute
  hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: af-south-1b
      CidrBlock: 10.63.43.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: incoming-web-envoy-zone
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet2/Subnet
  hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTable0679E2F4:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet2/RouteTable
  hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTableAssociation6260E7FB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTable0679E2F4
      SubnetId:
        Ref: hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet2/RouteTableAssociation
  hyperswitchvpcincomingwebenvoyzoneSubnet2DefaultRouteE327EA43:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      RouteTableId:
        Ref: hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTable0679E2F4
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/incoming-web-envoy-zoneSubnet2/DefaultRoute
  hyperswitchvpcIGW690843C4:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch-vpc
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/IGW
  hyperswitchvpcVPCGW45D765DA:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: hyperswitchvpcIGW690843C4
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/VPCGW
  hyperswitchvpcRestrictDefaultSecurityGroupCustomResource5C0E0A1D:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - hyperswitchvpc6E98958A
          - DefaultSecurityGroup
      Account: "381491845955"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-vpc/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - arn:aws:ec2:af-south-1:381491845955:security-group/
                        - Fn::GetAtt:
                            - hyperswitchvpc6E98958A
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: hyperswitch/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-381491845955-af-south-1
        S3Key: ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs20.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: hyperswitch/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a
      aws:asset:property: Code
  HyperswitchelasticacheSGD4F727DC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/Hyperswitch-elasticache-SG
      GroupName: Hyperswitch-elasticache-SG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-elasticache-SG/Resource
  HyperswitchelasticacheSGfromhyperswitchHSEKSClusterClusterSecurityGroup28DB93296379D08506A5:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchHSEKSClusterClusterSecurityGroup28DB9329:6379
      FromPort: 6379
      GroupId:
        Fn::GetAtt:
          - HyperswitchelasticacheSGD4F727DC
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - HSEKSClusterE8C0D9C4
          - ClusterSecurityGroupId
      ToPort: 6379
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-elasticache-SG/from hyperswitchHSEKSClusterClusterSecurityGroup28DB9329:6379
  HSSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Hyperswitch Elasticache subnet group
      SubnetIds:
        - Ref: hyperswitchvpcpublicsubnet1Subnet1Subnet43D256C4
        - Ref: hyperswitchvpcpublicsubnet1Subnet2Subnet0C955FE9
        - Ref: hyperswitchvpcmanagementzoneSubnet1SubnetEEE4E472
        - Ref: hyperswitchvpcmanagementzoneSubnet2Subnet5AE7CDC4
        - Ref: hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9
        - Ref: hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/HSSubnetGroup
  HSCacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType: cache.t3.micro
      CacheSubnetGroupName:
        Ref: HSSubnetGroup
      ClusterName: hs-elasticache
      Engine: redis
      NumCacheNodes: 1
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - HyperswitchelasticacheSGD4F727DC
            - GroupId
    Metadata:
      aws:cdk:path: hyperswitch/HSCacheCluster
  HyperswitchdbSG3CDBCC59:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/Hyperswitch-db-SG
      GroupName: Hyperswitch-db-SG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-db-SG/Resource
  HyperswitchdbSGfromhyperswitchHSEKSClusterClusterSecurityGroup28DB93295432BF3BB35F:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchHSEKSClusterClusterSecurityGroup28DB9329:5432
      FromPort: 5432
      GroupId:
        Fn::GetAtt:
          - HyperswitchdbSG3CDBCC59
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - HSEKSClusterE8C0D9C4
          - ClusterSecurityGroupId
      ToPort: 5432
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-db-SG/from hyperswitchHSEKSClusterClusterSecurityGroup28DB9329:5432
  HyperswitchdbSGfromhyperswitchhyperswitchinternaljumpec2SG4037E91A5432ABB9CF9A:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: internal jump box
      FromPort: 5432
      GroupId:
        Fn::GetAtt:
          - HyperswitchdbSG3CDBCC59
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - hyperswitchinternaljumpec2SG203B314E
          - GroupId
      ToPort: 5432
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-db-SG/from hyperswitchhyperswitchinternaljumpec2SG4037E91A:5432
  hypersdbmasterusersecret5E17603B:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Database master user credentials
      Name: hypers-db-master-user-secret
      SecretString: '{"dbname":"hyperswitch","username":"db_user","password":"hyperSw1tch"}'
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hypers-db-master-user-secret/Resource
  hypersdbmasterusersecretAttachment8A7B789A:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: hypersdbmasterusersecret5E17603B
      TargetId:
        Ref: hyperswitchdbcluster6AFB6EE5
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: hyperswitch/hypers-db-master-user-secret/Attachment/Resource
  hyperswitchdbclusterSubnets565E6E0C:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for hyperswitch-db-cluster database
      SubnetIds:
        - Ref: hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5
        - Ref: hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-db-cluster/Subnets/Default
  hyperswitchdbcluster6AFB6EE5:
    Type: AWS::RDS::DBCluster
    Properties:
      CopyTagsToSnapshot: true
      DBClusterParameterGroupName: default.aurora-postgresql14
      DBSubnetGroupName:
        Ref: hyperswitchdbclusterSubnets565E6E0C
      DatabaseName: hyperswitch
      Engine: aurora-postgresql
      EngineVersion: "14.11"
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: hypersdbmasterusersecret5E17603B
            - :SecretString:password::}}
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: hypersdbmasterusersecret5E17603B
            - :SecretString:username::}}
      Port: 5432
      StorageEncrypted: true
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - HyperswitchdbSG3CDBCC59
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-db-cluster/Resource
  hyperswitchdbclusterWriterInstance3FFAF9E3:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: hyperswitchdbcluster6AFB6EE5
      DBInstanceClass: db.t3.medium
      Engine: aurora-postgresql
      PromotionTier: 0
      PubliclyAccessible: false
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    DependsOn:
      - hyperswitchvpcdatabasezoneSubnet1RouteTableAssociationBEA5DF69
      - hyperswitchvpcdatabasezoneSubnet2RouteTableAssociationC3BEE407
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-db-cluster/Writer Instance/Resource
  hyperswitchdbclusterReaderInstance48F2D838:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: hyperswitchdbcluster6AFB6EE5
      DBInstanceClass: db.t3.medium
      Engine: aurora-postgresql
      PromotionTier: 2
      PubliclyAccessible: false
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    DependsOn:
      - hyperswitchdbclusterWriterInstance3FFAF9E3
      - hyperswitchvpcdatabasezoneSubnet1RouteTableAssociationBEA5DF69
      - hyperswitchvpcdatabasezoneSubnet2RouteTableAssociationC3BEE407
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-db-cluster/Reader Instance/Resource
  ECRRole955FA8A3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/ECRRole/Resource
  ECRRoleDefaultPolicy9A5C7661:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - arn:aws:s3:::cdk-hnb659fds-assets-381491845955-af-south-1
              - arn:aws:s3:::cdk-hnb659fds-assets-381491845955-af-south-1/*
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - arn:aws:logs:af-south-1:381491845955:log-group:/aws/codebuild/
                    - Ref: ECRImageTransfer2AA843DA
                    - :*
              - Fn::Join:
                  - ""
                  - - arn:aws:logs:af-south-1:381491845955:log-group:/aws/codebuild/
                    - Ref: ECRImageTransfer2AA843DA
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - arn:aws:codebuild:af-south-1:381491845955:report-group/
                  - Ref: ECRImageTransfer2AA843DA
                  - -*
        Version: "2012-10-17"
      PolicyName: ECRRoleDefaultPolicy9A5C7661
      Roles:
        - Ref: ECRRole955FA8A3
    Metadata:
      aws:cdk:path: hyperswitch/ECRRole/DefaultPolicy/Resource
  ECRFullAccessPolicyF582B590:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:CompleteLayerUpload
              - ecr:CreateRepository
              - ecr:GetAuthorizationToken
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:UploadLayerPart
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ECRFullAccessPolicyF582B590
      Roles:
        - Ref: ECRRole955FA8A3
    Metadata:
      aws:cdk:path: hyperswitch/ECRFullAccessPolicy/Resource
  ECRImageTransfer2AA843DA:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: "381491845955"
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: af-south-1
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - ECRRole955FA8A3
          - Arn
      Source:
        BuildSpec: arn:aws:s3:::cdk-hnb659fds-assets-381491845955-af-south-1/92289e82cbe9bcd9a4b572b110fcab236355f84c435ea1dea67efaff0500d956.yml
        Type: NO_SOURCE
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/ECRImageTransfer/Resource
  ECRImageTransferLambdaRoleBC3CC53E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/ECRImageTransferLambdaRole/Resource
  ECRImageTransferLambdaRoleDefaultPolicy4AAECEEA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:AttachNetworkInterface
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DetachNetworkInterface
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - s3:GetObject
              - s3:PutObject
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ECRImageTransferLambdaRoleDefaultPolicy4AAECEEA
      Roles:
        - Ref: ECRImageTransferLambdaRoleBC3CC53E
    Metadata:
      aws:cdk:path: hyperswitch/ECRImageTransferLambdaRole/DefaultPolicy/Resource
  ECRImageTransferLambdaPolicy6CCE0175:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codebuild:StartBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRImageTransfer2AA843DA
                - Arn
        Version: "2012-10-17"
      PolicyName: ECRImageTransferLambdaPolicy6CCE0175
      Roles:
        - Ref: ECRImageTransferLambdaRoleBC3CC53E
    Metadata:
      aws:cdk:path: hyperswitch/ECRImageTransferLambdaPolicy/Resource
  ECRImageTransferLambdaLogsPolicyC7ED3A20:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ECRImageTransferLambdaLogsPolicyC7ED3A20
      Roles:
        - Ref: ECRImageTransferLambdaRoleBC3CC53E
    Metadata:
      aws:cdk:path: hyperswitch/ECRImageTransferLambdaLogsPolicy/Resource
  ECRImageTransferLambdaSecurityGroupCFD290FE:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function hyperswitchECRImageTransferLambda5B108DB3
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    DependsOn:
      - hyperswitchvpcisolatedsubnet1Subnet1DefaultRoute802D1807
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableAssociation016319F7
      - hyperswitchvpcisolatedsubnet1Subnet2DefaultRoute2CE9B616
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTableAssociationFB26520C
    Metadata:
      aws:cdk:path: hyperswitch/ECRImageTransferLambda/SecurityGroup/Resource
  ECRImageTransferLambda71B99438:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          import os
          import json
          import urllib3

          http = urllib3.PoolManager()

          def send(event, context, responseStatus, responseData, physicalResourceId=None, noEcho=False, reason=None):
              responseUrl = event['ResponseURL']

              responseBody = {
                  'Status': responseStatus,
                  'Reason': reason or "See the details in CloudWatch Log Stream: {}".format(context.log_stream_name),
                  'PhysicalResourceId': physicalResourceId or context.log_stream_name,
                  'StackId': event['StackId'],
                  'RequestId': event['RequestId'],
                  'LogicalResourceId': event['LogicalResourceId'],
                  'NoEcho': noEcho,
                  'Data': responseData
              }

              json_responseBody = json.dumps(responseBody)

              print("Response body:")
              print(json_responseBody)

              headers = {
                  'content-type': '',
                  'content-length': str(len(json_responseBody))
              }

              try:
                  response = http.request(
                      'PUT', responseUrl, headers=headers, body=json_responseBody)
                  print("Status code:", response.status)
                  return responseBody

              except Exception as e:

                  print("send(..) failed executing http.request(..):", e)
                  return {}


          def lambda_handler(event, context):
              # get the details from the codebuild project from the environment variables and trigger the codebuild project
              if event['RequestType'] == 'Create':
                  try:
                      codebuild = boto3.client('codebuild')
                      response = codebuild.start_build(
                          projectName=os.environ['PROJECT_NAME'],
                      )
                      send(event, context, "SUCCESS", {"message": "CodeBuild project started"})
                  except Exception as e:
                      send(event, context, "FAILED", {"message": str(e)})
              else:
                  send(event, context, "SUCCESS", {"message": "No action required"})

              return '{ "status": 200, "message": "success" }'
      Environment:
        Variables:
          PROJECT_NAME:
            Ref: ECRImageTransfer2AA843DA
      Handler: index.lambda_handler
      Role:
        Fn::GetAtt:
          - ECRImageTransferLambdaRoleBC3CC53E
          - Arn
      Runtime: python3.9
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      Timeout: 900
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - ECRImageTransferLambdaSecurityGroupCFD290FE
              - GroupId
        SubnetIds:
          - Ref: hyperswitchvpcisolatedsubnet1Subnet1Subnet9D47908C
          - Ref: hyperswitchvpcisolatedsubnet1Subnet2SubnetC00C52E2
    DependsOn:
      - ECRImageTransferLambdaRoleDefaultPolicy4AAECEEA
      - ECRImageTransferLambdaRoleBC3CC53E
      - hyperswitchvpcisolatedsubnet1Subnet1DefaultRoute802D1807
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableAssociation016319F7
      - hyperswitchvpcisolatedsubnet1Subnet2DefaultRoute2CE9B616
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTableAssociationFB26520C
    Metadata:
      aws:cdk:path: hyperswitch/ECRImageTransferLambda/Resource
  ECRImageTransferCR:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - ECRImageTransferLambda71B99438
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/ECRImageTransferCR/Default
  KubectlLayer600207B5:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket: cdk-hnb659fds-assets-381491845955-af-south-1
        S3Key: 7e5f48d1e79c915595d938c932b6f0101715a162780d01a55845367e014fbcda.zip
      Description: /opt/kubectl/kubectl and /opt/helm/helm
    Metadata:
      aws:cdk:path: hyperswitch/KubectlLayer/Resource
      aws:asset:path: asset.7e5f48d1e79c915595d938c932b6f0101715a162780d01a55845367e014fbcda.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  HSEKSClusterKubectlHandlerRole12043DEB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - Fn::If:
            - HSEKSClusterHasEcrPublic1090A4D3
            - Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly
            - Ref: AWS::NoValue
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
        - Key: SubStack
          Value: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/KubectlHandlerRole/Resource
  HSEKSClusterKubectlHandlerRoleDefaultPolicy22C955DE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: eks:DescribeCluster
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - HSEKSClusterE8C0D9C4
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - HSEKSClusterCreationRole592B55AB
                - Arn
        Version: "2012-10-17"
      PolicyName: HSEKSClusterKubectlHandlerRoleDefaultPolicy22C955DE
      Roles:
        - Ref: HSEKSClusterKubectlHandlerRole12043DEB
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/KubectlHandlerRole/DefaultPolicy/Resource
  HSEKSClusterRole2BC614D6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
        - Key: SubStack
          Value: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/Role/Resource
  HSEKSClusterControlPlaneSecurityGroupD141A0D2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Control Plane Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
        - Key: SubStack
          Value: HyperswitchEKS
      VpcId:
        Ref: hyperswitchvpc6E98958A
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/ControlPlaneSecurityGroup/Resource
  HSEKSClusterCreationRole592B55AB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                - Fn::GetAtt:
                    - HSEKSClusterKubectlHandlerRole12043DEB
                    - Arn
                - Fn::GetAtt:
                    - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
                    - Outputs.hyperswitchawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRoleFBF9C502Arn
                - Fn::GetAtt:
                    - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
                    - Outputs.hyperswitchawscdkawseksClusterResourceProviderOnEventHandlerServiceRoleE2CBF2D8Arn
        Version: "2012-10-17"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
        - Key: SubStack
          Value: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - hyperswitchvpcdatastackzoneSubnet1DefaultRouteC53DC630
      - hyperswitchvpcdatastackzoneSubnet1RouteTable87E77B2D
      - hyperswitchvpcdatastackzoneSubnet1RouteTableAssociation41ED099A
      - hyperswitchvpcdatastackzoneSubnet1Subnet018585ED
      - hyperswitchvpcdatastackzoneSubnet2DefaultRoute561F56A5
      - hyperswitchvpcdatastackzoneSubnet2RouteTableDF6EDADC
      - hyperswitchvpcdatastackzoneSubnet2RouteTableAssociation42A8233D
      - hyperswitchvpcdatastackzoneSubnet2Subnet262C301A
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1DefaultRoute97005569
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTable02F70E2B
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTableAssociationE41F3146
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1Subnet1000CDE4
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2DefaultRoute826D7857
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableE4719469
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableAssociation3B2036CD
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2SubnetFE5772F2
      - hyperswitchvpcdatabasezoneSubnet1RouteTableD2EC564B
      - hyperswitchvpcdatabasezoneSubnet1RouteTableAssociationBEA5DF69
      - hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5
      - hyperswitchvpcdatabasezoneSubnet2RouteTableED60F558
      - hyperswitchvpcdatabasezoneSubnet2RouteTableAssociationC3BEE407
      - hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4
      - hyperswitchvpcekscontrolplanezoneSubnet1DefaultRouteE2AD666B
      - hyperswitchvpcekscontrolplanezoneSubnet1RouteTable993E6DEF
      - hyperswitchvpcekscontrolplanezoneSubnet1RouteTableAssociationA248CBC7
      - hyperswitchvpcekscontrolplanezoneSubnet1Subnet20A5BC9A
      - hyperswitchvpcekscontrolplanezoneSubnet2DefaultRoute9117D2BA
      - hyperswitchvpcekscontrolplanezoneSubnet2RouteTable01F459C5
      - hyperswitchvpcekscontrolplanezoneSubnet2RouteTableAssociationBA3CECAF
      - hyperswitchvpcekscontrolplanezoneSubnet2Subnet0DFFA8A8
      - hyperswitchvpceksworkernodesonezoneSubnet1DefaultRoute5F97D10F
      - hyperswitchvpceksworkernodesonezoneSubnet1RouteTable391C093D
      - hyperswitchvpceksworkernodesonezoneSubnet1RouteTableAssociation131D95AF
      - hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
      - hyperswitchvpceksworkernodesonezoneSubnet2DefaultRouteD75B6ED2
      - hyperswitchvpceksworkernodesonezoneSubnet2RouteTable9FB068B2
      - hyperswitchvpceksworkernodesonezoneSubnet2RouteTableAssociation7FBA51C8
      - hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      - hyperswitchvpcelasticachezoneSubnet1RouteTable595C60D8
      - hyperswitchvpcelasticachezoneSubnet1RouteTableAssociation810D9AEB
      - hyperswitchvpcelasticachezoneSubnet1SubnetB39F1526
      - hyperswitchvpcelasticachezoneSubnet2RouteTableCDBE3EE2
      - hyperswitchvpcelasticachezoneSubnet2RouteTableAssociationFBACCDB2
      - hyperswitchvpcelasticachezoneSubnet2Subnet369E0A13
      - hyperswitchvpcexternalincomingzoneSubnet1DefaultRoute2F32AE05
      - hyperswitchvpcexternalincomingzoneSubnet1RouteTableA40E4EAD
      - hyperswitchvpcexternalincomingzoneSubnet1RouteTableAssociationC9451618
      - hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9
      - hyperswitchvpcexternalincomingzoneSubnet2DefaultRoute2EDBCE30
      - hyperswitchvpcexternalincomingzoneSubnet2RouteTable018A90E4
      - hyperswitchvpcexternalincomingzoneSubnet2RouteTableAssociation22321931
      - hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68
      - hyperswitchvpcIGW690843C4
      - hyperswitchvpcincomingnpcizoneSubnet1DefaultRoute372C3BB8
      - hyperswitchvpcincomingnpcizoneSubnet1RouteTableD1A7BD32
      - hyperswitchvpcincomingnpcizoneSubnet1RouteTableAssociationD032C523
      - hyperswitchvpcincomingnpcizoneSubnet1Subnet54063BB1
      - hyperswitchvpcincomingnpcizoneSubnet2DefaultRouteC9C00B85
      - hyperswitchvpcincomingnpcizoneSubnet2RouteTableEBA207F5
      - hyperswitchvpcincomingnpcizoneSubnet2RouteTableAssociation19D1B984
      - hyperswitchvpcincomingnpcizoneSubnet2Subnet7E780622
      - hyperswitchvpcincomingwebenvoyzoneSubnet1DefaultRouteE2419C31
      - hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTable233FC848
      - hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTableAssociation6F4D882C
      - hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD
      - hyperswitchvpcincomingwebenvoyzoneSubnet2DefaultRouteE327EA43
      - hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTable0679E2F4
      - hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTableAssociation6260E7FB
      - hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B
      - hyperswitchvpcisolatedsubnet1Subnet1DefaultRoute802D1807
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableF564B640
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableAssociation016319F7
      - hyperswitchvpcisolatedsubnet1Subnet1Subnet9D47908C
      - hyperswitchvpcisolatedsubnet1Subnet2DefaultRoute2CE9B616
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTable47634573
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTableAssociationFB26520C
      - hyperswitchvpcisolatedsubnet1Subnet2SubnetC00C52E2
      - hyperswitchvpclockerdatabasezoneSubnet1RouteTableFBE2F9CA
      - hyperswitchvpclockerdatabasezoneSubnet1RouteTableAssociation4675820C
      - hyperswitchvpclockerdatabasezoneSubnet1Subnet3CAE1D64
      - hyperswitchvpclockerdatabasezoneSubnet2RouteTableA677358E
      - hyperswitchvpclockerdatabasezoneSubnet2RouteTableAssociation690CC83A
      - hyperswitchvpclockerdatabasezoneSubnet2Subnet3578500C
      - hyperswitchvpclockerserverzoneSubnet1RouteTable84449A93
      - hyperswitchvpclockerserverzoneSubnet1RouteTableAssociationE97AB2FE
      - hyperswitchvpclockerserverzoneSubnet1SubnetB48EAB73
      - hyperswitchvpclockerserverzoneSubnet2RouteTable995B0544
      - hyperswitchvpclockerserverzoneSubnet2RouteTableAssociationB2465344
      - hyperswitchvpclockerserverzoneSubnet2SubnetD8EB827D
      - hyperswitchvpcmanagementzoneSubnet1DefaultRoute7FA78714
      - hyperswitchvpcmanagementzoneSubnet1RouteTableD6132081
      - hyperswitchvpcmanagementzoneSubnet1RouteTableAssociation34C82326
      - hyperswitchvpcmanagementzoneSubnet1SubnetEEE4E472
      - hyperswitchvpcmanagementzoneSubnet2DefaultRoute293BF425
      - hyperswitchvpcmanagementzoneSubnet2RouteTable329E1D69
      - hyperswitchvpcmanagementzoneSubnet2RouteTableAssociation8512B695
      - hyperswitchvpcmanagementzoneSubnet2Subnet5AE7CDC4
      - hyperswitchvpcoutgoingproxylbzoneSubnet1DefaultRoute1443EB0F
      - hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableA6A1CF9A
      - hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableAssociationB6D4065B
      - hyperswitchvpcoutgoingproxylbzoneSubnet1Subnet40541EC1
      - hyperswitchvpcoutgoingproxylbzoneSubnet2DefaultRouteEDD5BFA5
      - hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTable27804EB0
      - hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTableAssociation2EF14CD1
      - hyperswitchvpcoutgoingproxylbzoneSubnet2Subnet5B702C5A
      - hyperswitchvpcoutgoingproxyzoneSubnet1DefaultRouteA24C159F
      - hyperswitchvpcoutgoingproxyzoneSubnet1RouteTable2C38063F
      - hyperswitchvpcoutgoingproxyzoneSubnet1RouteTableAssociation35BEB283
      - hyperswitchvpcoutgoingproxyzoneSubnet1Subnet5C2645ED
      - hyperswitchvpcoutgoingproxyzoneSubnet2DefaultRouteE4741B9D
      - hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableFCB35384
      - hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableAssociation8046B8EF
      - hyperswitchvpcoutgoingproxyzoneSubnet2Subnet9CEF0CD5
      - hyperswitchvpcpublicsubnet1Subnet1DefaultRoute9CB4C458
      - hyperswitchvpcpublicsubnet1Subnet1EIP22FE0BC1
      - hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      - hyperswitchvpcpublicsubnet1Subnet1RouteTable0C4CDC68
      - hyperswitchvpcpublicsubnet1Subnet1RouteTableAssociation7C6AAE20
      - hyperswitchvpcpublicsubnet1Subnet1Subnet43D256C4
      - hyperswitchvpcpublicsubnet1Subnet2DefaultRouteD1E33909
      - hyperswitchvpcpublicsubnet1Subnet2EIP3E95D076
      - hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      - hyperswitchvpcpublicsubnet1Subnet2RouteTable21521D41
      - hyperswitchvpcpublicsubnet1Subnet2RouteTableAssociation6E52BC2D
      - hyperswitchvpcpublicsubnet1Subnet2Subnet0C955FE9
      - hyperswitchvpc6E98958A
      - hyperswitchvpcRestrictDefaultSecurityGroupCustomResource5C0E0A1D
      - hyperswitchvpcservicelayerzoneSubnet1DefaultRoute6730B405
      - hyperswitchvpcservicelayerzoneSubnet1RouteTable5B412BEC
      - hyperswitchvpcservicelayerzoneSubnet1RouteTableAssociation3BCB92BC
      - hyperswitchvpcservicelayerzoneSubnet1SubnetD1393109
      - hyperswitchvpcservicelayerzoneSubnet2DefaultRoute73A66C31
      - hyperswitchvpcservicelayerzoneSubnet2RouteTable3FB66943
      - hyperswitchvpcservicelayerzoneSubnet2RouteTableAssociation5B74F829
      - hyperswitchvpcservicelayerzoneSubnet2SubnetC7472100
      - hyperswitchvpcutilszoneSubnet1DefaultRoute9B482EAD
      - hyperswitchvpcutilszoneSubnet1RouteTable343BF850
      - hyperswitchvpcutilszoneSubnet1RouteTableAssociation475FCA2B
      - hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9
      - hyperswitchvpcutilszoneSubnet2DefaultRouteB77BFA40
      - hyperswitchvpcutilszoneSubnet2RouteTable7D41147C
      - hyperswitchvpcutilszoneSubnet2RouteTableAssociationC0B047AC
      - hyperswitchvpcutilszoneSubnet2Subnet54FB18DF
      - hyperswitchvpcVPCGW45D765DA
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/Resource/CreationRole/Resource
  HSEKSClusterCreationRoleDefaultPolicyFD39A6C4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - HSEKSClusterRole2BC614D6
                - Arn
          - Action:
              - eks:CreateCluster
              - eks:CreateFargateProfile
              - eks:DeleteCluster
              - eks:DescribeCluster
              - eks:DescribeUpdate
              - eks:TagResource
              - eks:UntagResource
              - eks:UpdateClusterConfig
              - eks:UpdateClusterVersion
            Effect: Allow
            Resource:
              - arn:aws:eks:af-south-1:381491845955:cluster/hs-eks-cluster
              - arn:aws:eks:af-south-1:381491845955:cluster/hs-eks-cluster/*
          - Action:
              - eks:DeleteFargateProfile
              - eks:DescribeFargateProfile
            Effect: Allow
            Resource: arn:aws:eks:af-south-1:381491845955:fargateprofile/hs-eks-cluster/*
          - Action:
              - ec2:DescribeDhcpOptions
              - ec2:DescribeInstances
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - iam:CreateServiceLinkedRole
              - iam:GetRole
              - iam:listAttachedRolePolicies
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: HSEKSClusterCreationRoleDefaultPolicyFD39A6C4
      Roles:
        - Ref: HSEKSClusterCreationRole592B55AB
    DependsOn:
      - ECRImageTransferCR
      - hyperswitchvpcdatastackzoneSubnet1DefaultRouteC53DC630
      - hyperswitchvpcdatastackzoneSubnet1RouteTable87E77B2D
      - hyperswitchvpcdatastackzoneSubnet1RouteTableAssociation41ED099A
      - hyperswitchvpcdatastackzoneSubnet1Subnet018585ED
      - hyperswitchvpcdatastackzoneSubnet2DefaultRoute561F56A5
      - hyperswitchvpcdatastackzoneSubnet2RouteTableDF6EDADC
      - hyperswitchvpcdatastackzoneSubnet2RouteTableAssociation42A8233D
      - hyperswitchvpcdatastackzoneSubnet2Subnet262C301A
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1DefaultRoute97005569
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTable02F70E2B
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTableAssociationE41F3146
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1Subnet1000CDE4
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2DefaultRoute826D7857
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableE4719469
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableAssociation3B2036CD
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2SubnetFE5772F2
      - hyperswitchvpcdatabasezoneSubnet1RouteTableD2EC564B
      - hyperswitchvpcdatabasezoneSubnet1RouteTableAssociationBEA5DF69
      - hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5
      - hyperswitchvpcdatabasezoneSubnet2RouteTableED60F558
      - hyperswitchvpcdatabasezoneSubnet2RouteTableAssociationC3BEE407
      - hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4
      - hyperswitchvpcekscontrolplanezoneSubnet1DefaultRouteE2AD666B
      - hyperswitchvpcekscontrolplanezoneSubnet1RouteTable993E6DEF
      - hyperswitchvpcekscontrolplanezoneSubnet1RouteTableAssociationA248CBC7
      - hyperswitchvpcekscontrolplanezoneSubnet1Subnet20A5BC9A
      - hyperswitchvpcekscontrolplanezoneSubnet2DefaultRoute9117D2BA
      - hyperswitchvpcekscontrolplanezoneSubnet2RouteTable01F459C5
      - hyperswitchvpcekscontrolplanezoneSubnet2RouteTableAssociationBA3CECAF
      - hyperswitchvpcekscontrolplanezoneSubnet2Subnet0DFFA8A8
      - hyperswitchvpceksworkernodesonezoneSubnet1DefaultRoute5F97D10F
      - hyperswitchvpceksworkernodesonezoneSubnet1RouteTable391C093D
      - hyperswitchvpceksworkernodesonezoneSubnet1RouteTableAssociation131D95AF
      - hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
      - hyperswitchvpceksworkernodesonezoneSubnet2DefaultRouteD75B6ED2
      - hyperswitchvpceksworkernodesonezoneSubnet2RouteTable9FB068B2
      - hyperswitchvpceksworkernodesonezoneSubnet2RouteTableAssociation7FBA51C8
      - hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      - hyperswitchvpcelasticachezoneSubnet1RouteTable595C60D8
      - hyperswitchvpcelasticachezoneSubnet1RouteTableAssociation810D9AEB
      - hyperswitchvpcelasticachezoneSubnet1SubnetB39F1526
      - hyperswitchvpcelasticachezoneSubnet2RouteTableCDBE3EE2
      - hyperswitchvpcelasticachezoneSubnet2RouteTableAssociationFBACCDB2
      - hyperswitchvpcelasticachezoneSubnet2Subnet369E0A13
      - hyperswitchvpcexternalincomingzoneSubnet1DefaultRoute2F32AE05
      - hyperswitchvpcexternalincomingzoneSubnet1RouteTableA40E4EAD
      - hyperswitchvpcexternalincomingzoneSubnet1RouteTableAssociationC9451618
      - hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9
      - hyperswitchvpcexternalincomingzoneSubnet2DefaultRoute2EDBCE30
      - hyperswitchvpcexternalincomingzoneSubnet2RouteTable018A90E4
      - hyperswitchvpcexternalincomingzoneSubnet2RouteTableAssociation22321931
      - hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68
      - hyperswitchvpcIGW690843C4
      - hyperswitchvpcincomingnpcizoneSubnet1DefaultRoute372C3BB8
      - hyperswitchvpcincomingnpcizoneSubnet1RouteTableD1A7BD32
      - hyperswitchvpcincomingnpcizoneSubnet1RouteTableAssociationD032C523
      - hyperswitchvpcincomingnpcizoneSubnet1Subnet54063BB1
      - hyperswitchvpcincomingnpcizoneSubnet2DefaultRouteC9C00B85
      - hyperswitchvpcincomingnpcizoneSubnet2RouteTableEBA207F5
      - hyperswitchvpcincomingnpcizoneSubnet2RouteTableAssociation19D1B984
      - hyperswitchvpcincomingnpcizoneSubnet2Subnet7E780622
      - hyperswitchvpcincomingwebenvoyzoneSubnet1DefaultRouteE2419C31
      - hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTable233FC848
      - hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTableAssociation6F4D882C
      - hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD
      - hyperswitchvpcincomingwebenvoyzoneSubnet2DefaultRouteE327EA43
      - hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTable0679E2F4
      - hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTableAssociation6260E7FB
      - hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B
      - hyperswitchvpcisolatedsubnet1Subnet1DefaultRoute802D1807
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableF564B640
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableAssociation016319F7
      - hyperswitchvpcisolatedsubnet1Subnet1Subnet9D47908C
      - hyperswitchvpcisolatedsubnet1Subnet2DefaultRoute2CE9B616
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTable47634573
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTableAssociationFB26520C
      - hyperswitchvpcisolatedsubnet1Subnet2SubnetC00C52E2
      - hyperswitchvpclockerdatabasezoneSubnet1RouteTableFBE2F9CA
      - hyperswitchvpclockerdatabasezoneSubnet1RouteTableAssociation4675820C
      - hyperswitchvpclockerdatabasezoneSubnet1Subnet3CAE1D64
      - hyperswitchvpclockerdatabasezoneSubnet2RouteTableA677358E
      - hyperswitchvpclockerdatabasezoneSubnet2RouteTableAssociation690CC83A
      - hyperswitchvpclockerdatabasezoneSubnet2Subnet3578500C
      - hyperswitchvpclockerserverzoneSubnet1RouteTable84449A93
      - hyperswitchvpclockerserverzoneSubnet1RouteTableAssociationE97AB2FE
      - hyperswitchvpclockerserverzoneSubnet1SubnetB48EAB73
      - hyperswitchvpclockerserverzoneSubnet2RouteTable995B0544
      - hyperswitchvpclockerserverzoneSubnet2RouteTableAssociationB2465344
      - hyperswitchvpclockerserverzoneSubnet2SubnetD8EB827D
      - hyperswitchvpcmanagementzoneSubnet1DefaultRoute7FA78714
      - hyperswitchvpcmanagementzoneSubnet1RouteTableD6132081
      - hyperswitchvpcmanagementzoneSubnet1RouteTableAssociation34C82326
      - hyperswitchvpcmanagementzoneSubnet1SubnetEEE4E472
      - hyperswitchvpcmanagementzoneSubnet2DefaultRoute293BF425
      - hyperswitchvpcmanagementzoneSubnet2RouteTable329E1D69
      - hyperswitchvpcmanagementzoneSubnet2RouteTableAssociation8512B695
      - hyperswitchvpcmanagementzoneSubnet2Subnet5AE7CDC4
      - hyperswitchvpcoutgoingproxylbzoneSubnet1DefaultRoute1443EB0F
      - hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableA6A1CF9A
      - hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableAssociationB6D4065B
      - hyperswitchvpcoutgoingproxylbzoneSubnet1Subnet40541EC1
      - hyperswitchvpcoutgoingproxylbzoneSubnet2DefaultRouteEDD5BFA5
      - hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTable27804EB0
      - hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTableAssociation2EF14CD1
      - hyperswitchvpcoutgoingproxylbzoneSubnet2Subnet5B702C5A
      - hyperswitchvpcoutgoingproxyzoneSubnet1DefaultRouteA24C159F
      - hyperswitchvpcoutgoingproxyzoneSubnet1RouteTable2C38063F
      - hyperswitchvpcoutgoingproxyzoneSubnet1RouteTableAssociation35BEB283
      - hyperswitchvpcoutgoingproxyzoneSubnet1Subnet5C2645ED
      - hyperswitchvpcoutgoingproxyzoneSubnet2DefaultRouteE4741B9D
      - hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableFCB35384
      - hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableAssociation8046B8EF
      - hyperswitchvpcoutgoingproxyzoneSubnet2Subnet9CEF0CD5
      - hyperswitchvpcpublicsubnet1Subnet1DefaultRoute9CB4C458
      - hyperswitchvpcpublicsubnet1Subnet1EIP22FE0BC1
      - hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      - hyperswitchvpcpublicsubnet1Subnet1RouteTable0C4CDC68
      - hyperswitchvpcpublicsubnet1Subnet1RouteTableAssociation7C6AAE20
      - hyperswitchvpcpublicsubnet1Subnet1Subnet43D256C4
      - hyperswitchvpcpublicsubnet1Subnet2DefaultRouteD1E33909
      - hyperswitchvpcpublicsubnet1Subnet2EIP3E95D076
      - hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      - hyperswitchvpcpublicsubnet1Subnet2RouteTable21521D41
      - hyperswitchvpcpublicsubnet1Subnet2RouteTableAssociation6E52BC2D
      - hyperswitchvpcpublicsubnet1Subnet2Subnet0C955FE9
      - hyperswitchvpc6E98958A
      - hyperswitchvpcRestrictDefaultSecurityGroupCustomResource5C0E0A1D
      - hyperswitchvpcservicelayerzoneSubnet1DefaultRoute6730B405
      - hyperswitchvpcservicelayerzoneSubnet1RouteTable5B412BEC
      - hyperswitchvpcservicelayerzoneSubnet1RouteTableAssociation3BCB92BC
      - hyperswitchvpcservicelayerzoneSubnet1SubnetD1393109
      - hyperswitchvpcservicelayerzoneSubnet2DefaultRoute73A66C31
      - hyperswitchvpcservicelayerzoneSubnet2RouteTable3FB66943
      - hyperswitchvpcservicelayerzoneSubnet2RouteTableAssociation5B74F829
      - hyperswitchvpcservicelayerzoneSubnet2SubnetC7472100
      - hyperswitchvpcutilszoneSubnet1DefaultRoute9B482EAD
      - hyperswitchvpcutilszoneSubnet1RouteTable343BF850
      - hyperswitchvpcutilszoneSubnet1RouteTableAssociation475FCA2B
      - hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9
      - hyperswitchvpcutilszoneSubnet2DefaultRouteB77BFA40
      - hyperswitchvpcutilszoneSubnet2RouteTable7D41147C
      - hyperswitchvpcutilszoneSubnet2RouteTableAssociationC0B047AC
      - hyperswitchvpcutilszoneSubnet2Subnet54FB18DF
      - hyperswitchvpcVPCGW45D765DA
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/Resource/CreationRole/DefaultPolicy/Resource
  HSEKSClusterE8C0D9C4:
    Type: Custom::AWSCDK-EKS-Cluster
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.hyperswitchawscdkawseksClusterResourceProviderframeworkonEvent416ED79EArn
      Config:
        name: hs-eks-cluster
        version: "1.28"
        roleArn:
          Fn::GetAtt:
            - HSEKSClusterRole2BC614D6
            - Arn
        kubernetesNetworkConfig:
          ipFamily: ipv4
        resourcesVpcConfig:
          subnetIds:
            - Ref: hyperswitchvpcpublicsubnet1Subnet1Subnet43D256C4
            - Ref: hyperswitchvpcpublicsubnet1Subnet2Subnet0C955FE9
            - Ref: hyperswitchvpcmanagementzoneSubnet1SubnetEEE4E472
            - Ref: hyperswitchvpcmanagementzoneSubnet2Subnet5AE7CDC4
            - Ref: hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9
            - Ref: hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68
            - Ref: hyperswitchvpcisolatedsubnet1Subnet1Subnet9D47908C
            - Ref: hyperswitchvpcisolatedsubnet1Subnet2SubnetC00C52E2
            - Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet1Subnet1000CDE4
            - Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet2SubnetFE5772F2
            - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
            - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
            - Ref: hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9
            - Ref: hyperswitchvpcutilszoneSubnet2Subnet54FB18DF
            - Ref: hyperswitchvpcservicelayerzoneSubnet1SubnetD1393109
            - Ref: hyperswitchvpcservicelayerzoneSubnet2SubnetC7472100
            - Ref: hyperswitchvpcdatastackzoneSubnet1Subnet018585ED
            - Ref: hyperswitchvpcdatastackzoneSubnet2Subnet262C301A
            - Ref: hyperswitchvpcoutgoingproxylbzoneSubnet1Subnet40541EC1
            - Ref: hyperswitchvpcoutgoingproxylbzoneSubnet2Subnet5B702C5A
            - Ref: hyperswitchvpcoutgoingproxyzoneSubnet1Subnet5C2645ED
            - Ref: hyperswitchvpcoutgoingproxyzoneSubnet2Subnet9CEF0CD5
            - Ref: hyperswitchvpcincomingnpcizoneSubnet1Subnet54063BB1
            - Ref: hyperswitchvpcincomingnpcizoneSubnet2Subnet7E780622
            - Ref: hyperswitchvpcekscontrolplanezoneSubnet1Subnet20A5BC9A
            - Ref: hyperswitchvpcekscontrolplanezoneSubnet2Subnet0DFFA8A8
            - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD
            - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B
          securityGroupIds:
            - Fn::GetAtt:
                - HSEKSClusterControlPlaneSecurityGroupD141A0D2
                - GroupId
          endpointPublicAccess: true
          endpointPrivateAccess: true
          publicAccessCidrs:
            - 41.132.66.14/32
        logging:
          clusterLogging:
            - enabled: true
              types:
                - api
                - audit
                - authenticator
                - controllerManager
                - scheduler
        accessConfig: {}
      AssumeRoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      AttributesRevision: 3
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterCreationRoleDefaultPolicyFD39A6C4
      - HSEKSClusterCreationRole592B55AB
      - hyperswitchvpcdatastackzoneSubnet1DefaultRouteC53DC630
      - hyperswitchvpcdatastackzoneSubnet1RouteTable87E77B2D
      - hyperswitchvpcdatastackzoneSubnet1RouteTableAssociation41ED099A
      - hyperswitchvpcdatastackzoneSubnet1Subnet018585ED
      - hyperswitchvpcdatastackzoneSubnet2DefaultRoute561F56A5
      - hyperswitchvpcdatastackzoneSubnet2RouteTableDF6EDADC
      - hyperswitchvpcdatastackzoneSubnet2RouteTableAssociation42A8233D
      - hyperswitchvpcdatastackzoneSubnet2Subnet262C301A
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1DefaultRoute97005569
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTable02F70E2B
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTableAssociationE41F3146
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1Subnet1000CDE4
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2DefaultRoute826D7857
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableE4719469
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableAssociation3B2036CD
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2SubnetFE5772F2
      - hyperswitchvpcdatabasezoneSubnet1RouteTableD2EC564B
      - hyperswitchvpcdatabasezoneSubnet1RouteTableAssociationBEA5DF69
      - hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5
      - hyperswitchvpcdatabasezoneSubnet2RouteTableED60F558
      - hyperswitchvpcdatabasezoneSubnet2RouteTableAssociationC3BEE407
      - hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4
      - hyperswitchvpcekscontrolplanezoneSubnet1DefaultRouteE2AD666B
      - hyperswitchvpcekscontrolplanezoneSubnet1RouteTable993E6DEF
      - hyperswitchvpcekscontrolplanezoneSubnet1RouteTableAssociationA248CBC7
      - hyperswitchvpcekscontrolplanezoneSubnet1Subnet20A5BC9A
      - hyperswitchvpcekscontrolplanezoneSubnet2DefaultRoute9117D2BA
      - hyperswitchvpcekscontrolplanezoneSubnet2RouteTable01F459C5
      - hyperswitchvpcekscontrolplanezoneSubnet2RouteTableAssociationBA3CECAF
      - hyperswitchvpcekscontrolplanezoneSubnet2Subnet0DFFA8A8
      - hyperswitchvpceksworkernodesonezoneSubnet1DefaultRoute5F97D10F
      - hyperswitchvpceksworkernodesonezoneSubnet1RouteTable391C093D
      - hyperswitchvpceksworkernodesonezoneSubnet1RouteTableAssociation131D95AF
      - hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
      - hyperswitchvpceksworkernodesonezoneSubnet2DefaultRouteD75B6ED2
      - hyperswitchvpceksworkernodesonezoneSubnet2RouteTable9FB068B2
      - hyperswitchvpceksworkernodesonezoneSubnet2RouteTableAssociation7FBA51C8
      - hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      - hyperswitchvpcelasticachezoneSubnet1RouteTable595C60D8
      - hyperswitchvpcelasticachezoneSubnet1RouteTableAssociation810D9AEB
      - hyperswitchvpcelasticachezoneSubnet1SubnetB39F1526
      - hyperswitchvpcelasticachezoneSubnet2RouteTableCDBE3EE2
      - hyperswitchvpcelasticachezoneSubnet2RouteTableAssociationFBACCDB2
      - hyperswitchvpcelasticachezoneSubnet2Subnet369E0A13
      - hyperswitchvpcexternalincomingzoneSubnet1DefaultRoute2F32AE05
      - hyperswitchvpcexternalincomingzoneSubnet1RouteTableA40E4EAD
      - hyperswitchvpcexternalincomingzoneSubnet1RouteTableAssociationC9451618
      - hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9
      - hyperswitchvpcexternalincomingzoneSubnet2DefaultRoute2EDBCE30
      - hyperswitchvpcexternalincomingzoneSubnet2RouteTable018A90E4
      - hyperswitchvpcexternalincomingzoneSubnet2RouteTableAssociation22321931
      - hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68
      - hyperswitchvpcIGW690843C4
      - hyperswitchvpcincomingnpcizoneSubnet1DefaultRoute372C3BB8
      - hyperswitchvpcincomingnpcizoneSubnet1RouteTableD1A7BD32
      - hyperswitchvpcincomingnpcizoneSubnet1RouteTableAssociationD032C523
      - hyperswitchvpcincomingnpcizoneSubnet1Subnet54063BB1
      - hyperswitchvpcincomingnpcizoneSubnet2DefaultRouteC9C00B85
      - hyperswitchvpcincomingnpcizoneSubnet2RouteTableEBA207F5
      - hyperswitchvpcincomingnpcizoneSubnet2RouteTableAssociation19D1B984
      - hyperswitchvpcincomingnpcizoneSubnet2Subnet7E780622
      - hyperswitchvpcincomingwebenvoyzoneSubnet1DefaultRouteE2419C31
      - hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTable233FC848
      - hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTableAssociation6F4D882C
      - hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD
      - hyperswitchvpcincomingwebenvoyzoneSubnet2DefaultRouteE327EA43
      - hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTable0679E2F4
      - hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTableAssociation6260E7FB
      - hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B
      - hyperswitchvpcisolatedsubnet1Subnet1DefaultRoute802D1807
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableF564B640
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableAssociation016319F7
      - hyperswitchvpcisolatedsubnet1Subnet1Subnet9D47908C
      - hyperswitchvpcisolatedsubnet1Subnet2DefaultRoute2CE9B616
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTable47634573
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTableAssociationFB26520C
      - hyperswitchvpcisolatedsubnet1Subnet2SubnetC00C52E2
      - hyperswitchvpclockerdatabasezoneSubnet1RouteTableFBE2F9CA
      - hyperswitchvpclockerdatabasezoneSubnet1RouteTableAssociation4675820C
      - hyperswitchvpclockerdatabasezoneSubnet1Subnet3CAE1D64
      - hyperswitchvpclockerdatabasezoneSubnet2RouteTableA677358E
      - hyperswitchvpclockerdatabasezoneSubnet2RouteTableAssociation690CC83A
      - hyperswitchvpclockerdatabasezoneSubnet2Subnet3578500C
      - hyperswitchvpclockerserverzoneSubnet1RouteTable84449A93
      - hyperswitchvpclockerserverzoneSubnet1RouteTableAssociationE97AB2FE
      - hyperswitchvpclockerserverzoneSubnet1SubnetB48EAB73
      - hyperswitchvpclockerserverzoneSubnet2RouteTable995B0544
      - hyperswitchvpclockerserverzoneSubnet2RouteTableAssociationB2465344
      - hyperswitchvpclockerserverzoneSubnet2SubnetD8EB827D
      - hyperswitchvpcmanagementzoneSubnet1DefaultRoute7FA78714
      - hyperswitchvpcmanagementzoneSubnet1RouteTableD6132081
      - hyperswitchvpcmanagementzoneSubnet1RouteTableAssociation34C82326
      - hyperswitchvpcmanagementzoneSubnet1SubnetEEE4E472
      - hyperswitchvpcmanagementzoneSubnet2DefaultRoute293BF425
      - hyperswitchvpcmanagementzoneSubnet2RouteTable329E1D69
      - hyperswitchvpcmanagementzoneSubnet2RouteTableAssociation8512B695
      - hyperswitchvpcmanagementzoneSubnet2Subnet5AE7CDC4
      - hyperswitchvpcoutgoingproxylbzoneSubnet1DefaultRoute1443EB0F
      - hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableA6A1CF9A
      - hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableAssociationB6D4065B
      - hyperswitchvpcoutgoingproxylbzoneSubnet1Subnet40541EC1
      - hyperswitchvpcoutgoingproxylbzoneSubnet2DefaultRouteEDD5BFA5
      - hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTable27804EB0
      - hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTableAssociation2EF14CD1
      - hyperswitchvpcoutgoingproxylbzoneSubnet2Subnet5B702C5A
      - hyperswitchvpcoutgoingproxyzoneSubnet1DefaultRouteA24C159F
      - hyperswitchvpcoutgoingproxyzoneSubnet1RouteTable2C38063F
      - hyperswitchvpcoutgoingproxyzoneSubnet1RouteTableAssociation35BEB283
      - hyperswitchvpcoutgoingproxyzoneSubnet1Subnet5C2645ED
      - hyperswitchvpcoutgoingproxyzoneSubnet2DefaultRouteE4741B9D
      - hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableFCB35384
      - hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableAssociation8046B8EF
      - hyperswitchvpcoutgoingproxyzoneSubnet2Subnet9CEF0CD5
      - hyperswitchvpcpublicsubnet1Subnet1DefaultRoute9CB4C458
      - hyperswitchvpcpublicsubnet1Subnet1EIP22FE0BC1
      - hyperswitchvpcpublicsubnet1Subnet1NATGatewayE0082227
      - hyperswitchvpcpublicsubnet1Subnet1RouteTable0C4CDC68
      - hyperswitchvpcpublicsubnet1Subnet1RouteTableAssociation7C6AAE20
      - hyperswitchvpcpublicsubnet1Subnet1Subnet43D256C4
      - hyperswitchvpcpublicsubnet1Subnet2DefaultRouteD1E33909
      - hyperswitchvpcpublicsubnet1Subnet2EIP3E95D076
      - hyperswitchvpcpublicsubnet1Subnet2NATGatewayF8921779
      - hyperswitchvpcpublicsubnet1Subnet2RouteTable21521D41
      - hyperswitchvpcpublicsubnet1Subnet2RouteTableAssociation6E52BC2D
      - hyperswitchvpcpublicsubnet1Subnet2Subnet0C955FE9
      - hyperswitchvpc6E98958A
      - hyperswitchvpcRestrictDefaultSecurityGroupCustomResource5C0E0A1D
      - hyperswitchvpcservicelayerzoneSubnet1DefaultRoute6730B405
      - hyperswitchvpcservicelayerzoneSubnet1RouteTable5B412BEC
      - hyperswitchvpcservicelayerzoneSubnet1RouteTableAssociation3BCB92BC
      - hyperswitchvpcservicelayerzoneSubnet1SubnetD1393109
      - hyperswitchvpcservicelayerzoneSubnet2DefaultRoute73A66C31
      - hyperswitchvpcservicelayerzoneSubnet2RouteTable3FB66943
      - hyperswitchvpcservicelayerzoneSubnet2RouteTableAssociation5B74F829
      - hyperswitchvpcservicelayerzoneSubnet2SubnetC7472100
      - hyperswitchvpcutilszoneSubnet1DefaultRoute9B482EAD
      - hyperswitchvpcutilszoneSubnet1RouteTable343BF850
      - hyperswitchvpcutilszoneSubnet1RouteTableAssociation475FCA2B
      - hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9
      - hyperswitchvpcutilszoneSubnet2DefaultRouteB77BFA40
      - hyperswitchvpcutilszoneSubnet2RouteTable7D41147C
      - hyperswitchvpcutilszoneSubnet2RouteTableAssociationC0B047AC
      - hyperswitchvpcutilszoneSubnet2Subnet54FB18DF
      - hyperswitchvpcVPCGW45D765DA
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/Resource/Resource/Default
  HSEKSClusterKubectlReadyBarrierA2EF7517:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: aws:cdk:eks:kubectl-ready
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterCreationRoleDefaultPolicyFD39A6C4
      - HSEKSClusterCreationRole592B55AB
      - HSEKSClusterE8C0D9C4
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/KubectlReadyBarrier
  HSEKSClusterClusterSecurityGroupfromhyperswitchHSLBSecurityGroup3F203A59ALLPORTSABC35D0A:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound traffic from an existing load balancer security group
      FromPort: 0
      GroupId:
        Fn::GetAtt:
          - HSEKSClusterE8C0D9C4
          - ClusterSecurityGroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - HSLBSecurityGroup4A3E3CBA
          - GroupId
      ToPort: 65535
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/ClusterSecurityGroup/from hyperswitchHSLBSecurityGroup3F203A59:ALL PORTS
  HSEKSClusterClusterSecurityGroupfromhyperswitchgrafanaingresslbEBB4267E30002FBEEC2C:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchgrafanaingresslbEBB4267E:3000
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - HSEKSClusterE8C0D9C4
          - ClusterSecurityGroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - grafanaingresslb66766C37
          - GroupId
      ToPort: 3000
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/ClusterSecurityGroup/from hyperswitchgrafanaingresslbEBB4267E:3000
  HSEKSClusterClusterSecurityGroupfromhyperswitchgrafanaingresslbEBB4267E8015A82CA5:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchgrafanaingresslbEBB4267E:80
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - HSEKSClusterE8C0D9C4
          - ClusterSecurityGroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - grafanaingresslb66766C37
          - GroupId
      ToPort: 80
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/ClusterSecurityGroup/from hyperswitchgrafanaingresslbEBB4267E:80
  HSEKSClusterAwsAuthmanifest09D00A77:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ConfigMap","metadata":{"name":"aws-auth","namespace":"kube-system","labels":{"aws.cdk.eks/prune-c8e4c98fc446123a43a92a8a1452d1508b4bdb237e":""}},"data":{"mapRoles":"[{\"rolearn\":\"arn:aws:iam::381491845955:role/AWSReservedSSO_UG-SFT-AWSMultipayAdminSBX_ps_43c92ac860b53fcc\",\"username\":\"arn:aws:iam::381491845955:role/AWSReservedSSO_UG-SFT-AWSMultipayAdminSBX_ps_43c92ac860b53fcc\",\"groups\":[\"system:masters\"]},{\"rolearn\":\"'
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]}]","mapUsers":"[]","mapAccounts":"[]"}}]
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      PruneLabel: aws.cdk.eks/prune-c8e4c98fc446123a43a92a8a1452d1508b4bdb237e
      Overwrite: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/AwsAuth/manifest/Resource/Default
  HSEKSClusterOpenIdConnectProviderC4DC430F:
    Type: Custom::AWSCDKOpenIdConnectProvider
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0
          - Arn
      ClientIDList:
        - sts.amazonaws.com
      Url:
        Fn::GetAtt:
          - HSEKSClusterE8C0D9C4
          - OpenIdConnectIssuerUrl
      CodeHash: 977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/OpenIdConnectProvider/Resource/Default
  HSEKSClusterNodegroupHSNodegroupA43C2719:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
        - t3.medium
      Labels:
        node-type: generic-compute
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: hs-nodegroup
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 3
        MinSize: 1
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSNodegroup/Resource
  HSEKSClusterNodegroupHSAutopilotNodegroupEFACE040:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
      Labels:
        service: autopilot
        node-type: autopilot-od
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: autopilot-od
      ScalingConfig:
        DesiredSize: 1
        MaxSize: 2
        MinSize: 1
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSAutopilotNodegroup/Resource
  HSEKSClusterNodegroupHSCkhZookeeperNodegroup4B479119:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      Labels:
        node-type: ckh-zookeeper-compute
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: ckh-zookeeper-compute
      ScalingConfig:
        DesiredSize: 3
        MaxSize: 8
        MinSize: 3
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSCkhZookeeperNodegroup/Resource
  HSEKSClusterNodegroupHSCkhcomputeNodegroup8E1375E5:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      Labels:
        node-type: clickhouse-compute
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: clickhouse-compute-OD
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 3
        MinSize: 2
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSCkhcomputeNodegroup/Resource
  HSEKSClusterNodegroupHSControlcentreNodegroup917C4048:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
      Labels:
        node-type: control-center
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: control-center
      ScalingConfig:
        DesiredSize: 1
        MaxSize: 5
        MinSize: 1
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSControlcentreNodegroup/Resource
  HSEKSClusterNodegroupHSKafkacomputeNodegroupC2966DBB:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      Labels:
        node-type: kafka-compute
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: kafka-compute-OD
      ScalingConfig:
        DesiredSize: 3
        MaxSize: 6
        MinSize: 3
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSKafkacomputeNodegroup/Resource
  HSEKSClusterNodegroupHSMemoryoptimizeNodegroupD4C853D7:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
      Labels:
        node-type: memory-optimized
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: memory-optimized-od
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 5
        MinSize: 1
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSMemoryoptimizeNodegroup/Resource
  HSEKSClusterNodegroupHSMonitoringNodegroup5F977176:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
      Labels:
        node-type: monitoring
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: monitoring-od
      ScalingConfig:
        DesiredSize: 6
        MaxSize: 63
        MinSize: 3
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSMonitoringNodegroup/Resource
  HSEKSClusterNodegroupHSPomeriumNodegroupB1310C31:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
      Labels:
        service: pomerium
        node-type: pomerium
        function: SSO
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: pomerium
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 2
        MinSize: 2
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSPomeriumNodegroup/Resource
  HSEKSClusterNodegroupHSSystemNodegroup3626FBC4:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
      Labels:
        node-type: system-nodes
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: system-nodes-od
      ScalingConfig:
        DesiredSize: 1
        MaxSize: 5
        MinSize: 1
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSSystemNodegroup/Resource
  HSEKSClusterNodegroupHSUtilsNodegroupA69E9051:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
      Labels:
        node-type: elasticsearch
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: utils-compute-od
      ScalingConfig:
        DesiredSize: 5
        MaxSize: 8
        MinSize: 5
      Subnets:
        - Ref: hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9
        - Ref: hyperswitchvpcutilszoneSubnet2Subnet54FB18DF
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSUtilsNodegroup/Resource
  HSEKSClusterNodegroupHSZkcomputeNodegroupD0A37347:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      Labels:
        node-type: zookeeper-compute
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: zookeeper-compute
      ScalingConfig:
        DesiredSize: 3
        MaxSize: 10
        MinSize: 3
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupHSZkcomputeNodegroup/Resource
  HSEKSClusterchartALBController12883190:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: hs-lb-v1
      Chart: aws-load-balancer-controller
      Wait: true
      Values:
        Fn::Join:
          - ""
          - - '{"clusterName":"'
            - Ref: HSEKSClusterE8C0D9C4
            - '","image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/eks/aws-load-balancer-controller","tag":"v2.7.1"}}'
      Namespace: kube-system
      Repository: https://aws.github.io/eks-charts
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-ALBController/Resource/Default
  HSEKSClusterEbsCsiControllerSaConditionJsonE8C778DD:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
            - :aud":"sts.amazonaws.com","
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
            - :sub":"system:serviceaccount:kube-system:ebs-csi-controller-saaf-south-1"}
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/EbsCsiControllerSa/ConditionJson/Resource/Default
  HSEKSClusterEbsCsiControllerSaRole9A469C41:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - HSEKSClusterEbsCsiControllerSaConditionJsonE8C778DD
                  - Value
            Effect: Allow
            Principal:
              Federated:
                Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
        Version: "2012-10-17"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
        - Key: SubStack
          Value: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/EbsCsiControllerSa/Role/Resource
  HSEKSClusterEbsCsiControllerSamanifestEbsCsiControllerSaServiceAccountResourceC7547B3E:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"ebs-csi-controller-saaf-south-1","namespace":"kube-system","labels":{"aws.cdk.eks/prune-c8af68bca7fb3f7afaf5b9e42730fd4e5878483e47":"","app.kubernetes.io/name":"ebs-csi-controller-saaf-south-1"},"annotations":{"eks.amazonaws.com/role-arn":"'
            - Fn::GetAtt:
                - HSNodegroupRoleA5CDE24A
                - Arn
            - '"}}}]'
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      PruneLabel: aws.cdk.eks/prune-c8af68bca7fb3f7afaf5b9e42730fd4e5878483e47
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/EbsCsiControllerSa/manifest-EbsCsiControllerSaServiceAccountResource/Resource/Default
  HSEKSClusterchartEbsCsiDriver25F7FF0B:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: hyperswitchhseksclusterchartebscsidriverbba6dd07
      Chart: aws-ebs-csi-driver
      Version: 2.28.0
      Values: '{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/ebs-csi-driver/aws-ebs-csi-driver","tag":"v1.28.0"},"sidecars":{"provisioner":{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/eks-distro/kubernetes-csi/external-provisioner","tag":"v4.0.0-eks-1-29-5"}},"attacher":{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/eks-distro/kubernetes-csi/external-attacher","tag":"v4.5.0-eks-1-29-5"}},"snapshotter":{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/eks-distro/kubernetes-csi/external-snapshotter/csi-snapshotter","tag":"v7.0.0-eks-1-29-5"}},"livenessProbe":{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/eks-distro/kubernetes-csi/livenessprobe","tag":"v2.12.0-eks-1-29-5"}},"resizer":{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/eks-distro/kubernetes-csi/external-resizer","tag":"v1.10.0-eks-1-29-5"}},"nodeDriverRegistrar":{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/eks-distro/kubernetes-csi/node-driver-registrar","tag":"v2.10.0-eks-1-29-5"}},"volumemodifier":{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/ebs-csi-driver/volume-modifier-for-k8s","tag":"v0.2.1"}}}}'
      Namespace: kube-system
      Repository: https://kubernetes-sigs.github.io/aws-ebs-csi-driver
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-EbsCsiDriver/Resource/Default
  HSEKSClusterchartIstioBase4A5D75F3:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: istio-base
      Chart: base
      Version: 1.21.2
      Namespace: istio-system
      Repository: https://istio-release.storage.googleapis.com/charts
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-IstioBase/Resource/Default
  HSEKSClusterchartIstiod061F23D8:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: istio-discovery
      Chart: istiod
      Version: 1.21.2
      Values: '{"defaults":{"global":{"hub":"381491845955.dkr.ecr.af-south-1.amazonaws.com/istio"},"pilot":{"nodeSelector":{"node-type":"memory-optimized"}}}}'
      Namespace: istio-system
      Repository: https://istio-release.storage.googleapis.com/charts
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterchartALBController12883190
      - HSEKSClusterchartIstioBase4A5D75F3
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-Istiod/Resource/Default
  HSEKSClusterchartGateway5D20BB32:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: istio-ingressgateway
      Chart: gateway
      Version: 1.21.2
      Timeout: 600s
      Values: '{"defaults":{"service":{"type":"ClusterIP"},"nodeSelector":{"node-type":"memory-optimized"}}}'
      Namespace: istio-system
      Repository: https://istio-release.storage.googleapis.com/charts
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterchartALBController12883190
      - HSEKSClusterchartIstiod061F23D8
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-Gateway/Resource/Default
  HSEKSClusterNodegroupKeymanagerNodegroup66231F4D:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      ForceUpdateEnabled: true
      InstanceTypes:
        - t3.medium
        - t3.medium
      Labels:
        node-type: keymanager-ng
      NodeRole:
        Fn::GetAtt:
          - HSNodegroupRoleA5CDE24A
          - Arn
      NodegroupName: keymanager-ng
      ScalingConfig:
        DesiredSize: 1
        MaxSize: 6
        MinSize: 1
      Subnets:
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
      Tags:
        Stack: Hyperswitch
        StackName: hyperswitch
        SubStack: HyperswitchEKS
    DependsOn:
      - ECRImageTransferCR
      - HyperswitchLokiBucketF5EFF9DA
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/NodegroupKeymanagerNodegroup/Resource
  HSEKSClusterchartKeymanagerServiceE9C89C66:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: hs-keymanager
      Chart: hyperswitch-keymanager
      Values:
        Fn::Join:
          - ""
          - - '{"global":{"image":"juspaydotin/hyperswitch-keymanager:v0.1.3"},"server":{"image":"juspaydotin/hyperswitch-encryption-service:v0.1.3","secrets":{"key_id":"'
            - Ref: keymanagerkmskey4C62A6D2
            - '","iam_role":"'
            - Fn::GetAtt:
                - Keymanagerkeymanagerkmsrole84910F93
                - Arn
            - '","region":"af-south-1","ca_cert":"{{resolve:ssm:/keymanager/ca_cert:1}}","tls_key":"{{resolve:ssm:/keymanager/tls_key:1}}","tls_cert":"{{resolve:ssm:/keymanager/tls_cert:1}}"}},"postgresql":{"enabled":false},"external":{"enabled":true,"postgresql":{"enabled":true,"config":{"host":"'
            - Fn::GetAtt:
                - keymanagerdbclusterF55179C7
                - Endpoint.Address
            - '","port":5432,"username":"keymanager_db_user","password":"{{resolve:ssm:/keymanager/db_pass:1}}","database":"keymanager_db"}}}}'
      Namespace: keymanager
      Repository: https://juspay.github.io/hyperswitch-helm/charts/incubator/hyperswitch-keymanager
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterchartALBController12883190
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HSEKSClusterNodegroupKeymanagerNodegroup66231F4D
      - HyperswitchLokiBucketF5EFF9DA
      - KeymanagerKmsEncryptionCR
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-KeymanagerService/Resource/Default
  HSEKSClusterchartHyperswitchServicesB85DA142:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: hypers-v1
      Chart: hyperswitch-stack
      Values:
        Fn::Join:
          - ""
          - - '{"clusterName":"'
            - Ref: HSEKSClusterE8C0D9C4
            - '","loadBalancer":{"targetSecurityGroup":"'
            - Fn::GetAtt:
                - HSLBSecurityGroup4A3E3CBA
                - GroupId
            - '"},"hyperswitch-app":{"loadBalancer":{"targetSecurityGroup":"'
            - Fn::GetAtt:
                - HSLBSecurityGroup4A3E3CBA
                - GroupId
            - '"},"services":{"router":{"image":"381491845955.dkr.ecr.af-south-1.amazonaws.com/juspaydotin/hyperswitch-router:v1.111.0-standalone"},"producer":{"image":"381491845955.dkr.ecr.af-south-1.amazonaws.com/juspaydotin/hyperswitch-producer:v1.111.0-standalone"},"consumer":{"image":"381491845955.dkr.ecr.af-south-1.amazonaws.com/juspaydotin/hyperswitch-consumer:v1.111.0-standalone"},"controlCenter":{"image":"381491845955.dkr.ecr.af-south-1.amazonaws.com/juspaydotin/hyperswitch-control-center:v1.33.0"},"sdk":{"host":"http://'
            - Fn::GetAtt:
                - sdkDistributionCFDistribution1434D010
                - DomainName
            - '","version":"0.27.2","subversion":"v0"}},"application":{"server":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"node-type","operator":"In","values":["generic-compute"]}]}]}},"secrets_manager":"aws_kms","bucket_name":"logs-bucket-381491845955-af-south-1","serviceAccountAnnotations":{"eks.amazonaws.com/role-arn":"'
            - Fn::GetAtt:
                - HyperswitchServiceAccountRoleCC06B446
                - Arn
            - '"},"server_base_url":"http://hyperswitch-1627097576.af-south-1.elb.amazonaws.com","secrets":{"podAnnotations":{"traffic_sidecar_istio_io_excludeOutboundIPRanges":"10.23.6.12/32"},"kms_admin_api_key":"{{resolve:ssm:/hyperswitch/admin-api-key:1}}","kms_jwt_secret":"{{resolve:ssm:/hyperswitch/jwt-secret:1}}","kms_jwekey_locker_identifier1":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_jwekey_locker_identifier2":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_jwekey_locker_encryption_key1":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_jwekey_locker_encryption_key2":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_jwekey_locker_decryption_key1":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_jwekey_locker_decryption_key2":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_jwekey_vault_encryption_key":"{{resolve:ssm:/hyperswitch/locker-public-key:1}}","kms_jwekey_vault_private_key":"{{resolve:ssm:/hyperswitch/tenant-private-key:1}}","kms_jwekey_tunnel_private_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_jwekey_rust_locker_encryption_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_connector_onboarding_paypal_client_id":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_connector_onboarding_paypal_client_secret":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_connector_onboarding_paypal_partner_id":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","kms_key_id":"'
            - Ref: hyperswitchkmskey194D180F
            - '","kms_key_region":"af-south-1","kms_encrypted_api_hash_key":"{{resolve:ssm:/hyperswitch/kms-encrypted-api-hash-key:1}}","admin_api_key":"{{resolve:ssm:/hyperswitch/admin-api-key:1}}","jwt_secret":"{{resolve:ssm:/hyperswitch/jwt-secret:1}}","recon_admin_api_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","forex_api_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","forex_fallback_api_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","apple_pay_ppc":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","apple_pay_ppc_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","apple_pay_merchant_cert":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","apple_pay_merchant_cert_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","apple_pay_merchant_conf_merchant_cert":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","apple_pay_merchant_conf_merchant_cert_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","apple_pay_merchant_conf_merchant_id":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","pm_auth_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}","api_hash_key":"{{resolve:ssm:/hyperswitch/kms-encrypted-api-hash-key:1}}","user_auth_encryption_key":"{{resolve:ssm:/hyperswitch/dummy-val:1}}"},"master_enc_key":"{{resolve:ssm:/hyperswitch/master-key:1}}","locker":{"locker_enabled":false,"locker_public_key":"locker-key","hyperswitch_private_key":"locker-key"},"basilisk":{"host":"basilisk-host"},"run_env":"sandbox"}},"consumer":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"node-type","operator":"In","values":["generic-compute"]}]}]}}},"producer":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"node-type","operator":"In","values":["generic-compute"]}]}]}}},"controlCenter":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"node-type","operator":"In","values":["control-center"]}]}]}}},"postgresql":{"enabled":false},"externalPostgresql":{"enabled":true,"primary":{"host":"'
            - Fn::GetAtt:
                - hyperswitchdbcluster6AFB6EE5
                - Endpoint.Address
            - '","auth":{"username":"db_user","database":"hyperswitch","password":"{{resolve:ssm:/hyperswitch/db-pass:1}}","plainpassword":"hyperSw1tch"}},"readOnly":{"host":"'
            - Fn::GetAtt:
                - hyperswitchdbcluster6AFB6EE5
                - ReadEndpoint.Address
            - '","auth":{"username":"db_user","database":"hyperswitch","password":"{{resolve:ssm:/hyperswitch/db-pass:1}}","plainpassword":"hyperSw1tch"}}},"redis":{"enabled":false},"externalRedis":{"enabled":true,"host":"'
            - Fn::GetAtt:
                - HSCacheCluster
                - RedisEndpoint.Address
            - '","port":6379},"autoscaling":{"enabled":true,"minReplicas":3,"maxReplicas":5,"targetCPUUtilizationPercentage":80},"hyperswitch-card-vault":{"enabled":false,"postgresql":{"enabled":false}}},"hyperswitchsdk":{"enabled":true,"services":{"router":{"host":"http://hyperswitch-1627097576.af-south-1.elb.amazonaws.com"},"sdkDemo":{"image":"juspaydotin/hyperswitch-web:v1.0.12","hyperswitchPublishableKey":"pub_key","hyperswitchSecretKey":"secret_key"}},"loadBalancer":{"targetSecurityGroup":"'
            - Fn::GetAtt:
                - HSLBSecurityGroup4A3E3CBA
                - GroupId
            - '"},"ingress":{"className":"alb","annotations":{"alb.ingress.kubernetes.io/backend-protocol":"HTTP","alb.ingress.kubernetes.io/backend-protocol-version":"HTTP1","alb.ingress.kubernetes.io/group.name":"hyperswitch-web-alb-ingress-group","alb.ingress.kubernetes.io/ip-address-type":"ipv4","alb.ingress.kubernetes.io/listen-ports":"[{\"HTTP\": 80}]","alb.ingress.kubernetes.io/load-balancer-name":"hyperswitch-web","alb.ingress.kubernetes.io/scheme":"internet-facing","alb.ingress.kubernetes.io/security-groups":"'
            - Fn::GetAtt:
                - HSLBSecurityGroup4A3E3CBA
                - GroupId
            - '","alb.ingress.kubernetes.io/tags":"stack=hyperswitch-lb","alb.ingress.kubernetes.io/target-type":"ip"},"hosts":[{"host":"","paths":[{"path":"/","pathType":"Prefix"}]}]},"autoBuild":{"forceBuild":false,"gitCloneParam":{"gitVersion":"0.27.2"},"buildParam":{"envSdkUrl":"http://'
            - Fn::GetAtt:
                - sdkDistributionCFDistribution1434D010
                - DomainName
            - '"},"nginxConfig":{"extraPath":"v0"}}}}'
      Namespace: hyperswitch
      Repository: https://juspay.github.io/hyperswitch-helm/v0.1.3
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterchartALBController12883190
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchKmsEncryptionCR
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-HyperswitchServices/Resource/Default
  HSEKSClusterchartTrafficControlDB39A5AA:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: hs-istio
      Chart: hyperswitch-istio
      Values:
        Fn::Join:
          - ""
          - - '{"image":{"version":"v1o107o0"},"ingress":{"enabled":true,"className":"alb","annotations":{"alb.ingress.kubernetes.io/backend-protocol":"HTTP","alb.ingress.kubernetes.io/backend-protocol-version":"HTTP1","alb.ingress.kubernetes.io/group.name":"hyperswitch-istio-app-alb-ingress-group","alb.ingress.kubernetes.io/healthcheck-interval-seconds":"5","alb.ingress.kubernetes.io/healthcheck-path":"/healthz/ready","alb.ingress.kubernetes.io/healthcheck-port":"15021","alb.ingress.kubernetes.io/healthcheck-protocol":"HTTP","alb.ingress.kubernetes.io/healthcheck-timeout-seconds":"2","alb.ingress.kubernetes.io/healthy-threshold-count":"5","alb.ingress.kubernetes.io/ip-address-type":"ipv4","alb.ingress.kubernetes.io/listen-ports":"[{\"HTTP\": 80}]","alb.ingress.kubernetes.io/load-balancer-attributes":"routing.http.drop_invalid_header_fields.enabled=true,routing.http.xff_client_port.enabled=true,routing.http.preserve_host_header.enabled=true","alb.ingress.kubernetes.io/scheme":"internal","alb.ingress.kubernetes.io/security-groups":"'
            - Fn::GetAtt:
                - HSLBSecurityGroup4A3E3CBA
                - GroupId
            - '","alb.ingress.kubernetes.io/subnets":"'
            - Ref: hyperswitchvpcservicelayerzoneSubnet1SubnetD1393109
            - ","
            - Ref: hyperswitchvpcservicelayerzoneSubnet2SubnetC7472100
            - '","alb.ingress.kubernetes.io/target-type":"ip","alb.ingress.kubernetes.io/unhealthy-threshold-count":"3"},"hosts":{"paths":[{"path":"/","pathType":"Prefix","port":80,"name":"istio-ingressgateway"},{"path":"/healthz/ready","pathType":"Prefix","port":15021,"name":"istio-ingressgateway"}]}}}'
      Namespace: default
      Repository: https://juspay.github.io/hyperswitch-helm/charts/incubator/hyperswitch-istio
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterchartGateway5D20BB32
      - HSEKSClusterchartHyperswitchServicesB85DA142
      - HSEKSClusterchartIstioBase4A5D75F3
      - HSEKSClusterchartIstiod061F23D8
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-TrafficControl/Resource/Default
  HSEKSClusterchartLokiController4F50C172:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: loki
      Chart: loki-stack
      Values:
        Fn::Join:
          - ""
          - - '{"grafana":{"global":{"imageRegistry":"381491845955.dkr.ecr.af-south-1.amazonaws.com"},"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/grafana/grafana","tag":"latest"},"sidecar":{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/kiwigrid/k8s-sidecar","tag":"1.19.2","sha":""},"imagePullPolicy":"IfNotPresent","resources":{}},"enabled":true,"adminPassword":"admin","serviceAccount":{"annotations":{"eks.amazonaws.com/role-arn":"'
            - Fn::GetAtt:
                - GrafanaServiceAccountRole2110C247
                - Arn
            - '"}},"nodeSelector":{"node-type":"monitoring"},"ingress":{"enabled":true,"ingressClassName":"alb","annotations":{"alb.ingress.kubernetes.io/backend-protocol":"HTTP","alb.ingress.kubernetes.io/group.name":"hs-logs-alb-ingress-group","alb.ingress.kubernetes.io/ip-address-type":"ipv4","alb.ingress.kubernetes.io/healthcheck-path":"/api/health","alb.ingress.kubernetes.io/listen-ports":"[{\"HTTP\": 80}]","alb.ingress.kubernetes.io/load-balancer-attributes":"routing.http.drop_invalid_header_fields.enabled=true","alb.ingress.kubernetes.io/load-balancer-name":"hyperswitch-grafana-logs","alb.ingress.kubernetes.io/scheme":"internet-facing","alb.ingress.kubernetes.io/tags":"stack=hyperswitch-lb","alb.ingress.kubernetes.io/security-groups":"'
            - Fn::GetAtt:
                - grafanaingresslb66766C37
                - GroupId
            - '","alb.ingress.kubernetes.io/subnets":"'
            - Ref: hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9
            - ","
            - Ref: hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68
            - '","alb.ingress.kubernetes.io/target-type":"ip"},"extraPaths":[{"path":"/","pathType":"Prefix","backend":{"service":{"name":"loki-grafana","port":{"number":80}}}}],"hosts":[]}},"loki":{"enabled":true,"global":{"imageRegistry":"381491845955.dkr.ecr.af-south-1.amazonaws.com"},"serviceAccount":{"annotations":{"eks.amazonaws.com/role-arn":"'
            - Fn::GetAtt:
                - GrafanaServiceAccountRole2110C247
                - Arn
            - '"}},"nodeSelector":{"node-type":"monitoring"},"config":{"limits_config":{"enforce_metric_name":false,"max_entries_limit_per_query":5000,"max_query_lookback":"90d","reject_old_samples":true,"reject_old_samples_max_age":"168h","retention_period":"100d","retention_stream":[{"period":"7d","priority":1,"selector":"{level=\"debug\"}"}]},"schema_config":{"configs":[{"chunks":{"period":"24h","prefix":"loki_chunk_"},"from":"2024-05-01","index":{"prefix":"loki_index_","period":"24h"},"object_store":"s3","schema":"v12","store":"tsdb"}]},"storage_config":{"boltdb_shipper":{"active_index_directory":"/data/loki/boltdb-shipper-active","cache_location":"/data/loki/boltdb-shipper-cache","cache_ttl":"24h","shared_store":"filesystem"},"filesystem":{"directory":"/data/loki/chunks"},"hedging":{"at":"250ms","max_per_second":20,"up_to":3},"tsdb_shipper":{"active_index_directory":"/data/tsdb-index","cache_location":"/data/tsdb-cache","shared_store":"s3"},"aws":{"bucketnames":"'
            - Ref: HyperswitchLokiBucketF5EFF9DA
            - '","region":"af-south-1"}}},"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/grafana/loki","tag":"latest"}},"promtail":{"enabled":true,"global":{"imageRegisrty":"381491845955.dkr.ecr.af-south-1.amazonaws.com"},"image":{"registry":"381491845955.dkr.ecr.af-south-1.amazonaws.com","repository":"grafana/promtail","tag":"latest"},"config":{"snippets":{"extraRelabelConfigs":[{"action":"keep","regex":"hyperswitch-.*","source_labels":["__meta_kubernetes_pod_label_app"]}]}}}}'
      Namespace: loki
      Repository: https://grafana.github.io/helm-charts/
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterchartHyperswitchServicesB85DA142
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-LokiController/Resource/Default
  HSEKSClusterchartMetricsServer37D84C3A:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.hyperswitchawscdkawseksKubectlProviderframeworkonEvent97E588B3Arn
      ClusterName:
        Ref: HSEKSClusterE8C0D9C4
      RoleArn:
        Fn::GetAtt:
          - HSEKSClusterCreationRole592B55AB
          - Arn
      Release: metrics-server
      Chart: metrics-server
      Values: '{"image":{"repository":"381491845955.dkr.ecr.af-south-1.amazonaws.com/bitnami/metrics-server","tag":"0.7.0"}}'
      Namespace: kube-system
      Repository: https://kubernetes-sigs.github.io/metrics-server/
      CreateNamespace: true
    DependsOn:
      - ECRImageTransferCR
      - HSEKSClusterKubectlReadyBarrierA2EF7517
      - HyperswitchLokiBucketF5EFF9DA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HSEKSCluster/chart-MetricsServer/Resource/Default
  awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454:
    Type: AWS::CloudFormation::Stack
    Properties:
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.af-south-1.
            - Ref: AWS::URLSuffix
            - /cdk-hnb659fds-assets-381491845955-af-south-1/2ecf41eba651a0cdaae5961e98a8753e3bde4cce8d7af6b00ebac39e0bb766df.json
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource
      aws:asset:path: hyperswitchawscdkawseksClusterResourceProviderA539DB13.nested.template.json
      aws:asset:property: TemplateURL
  awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        referencetohyperswitchKubectlLayerF9211D23Ref:
          Ref: KubectlLayer600207B5
        referencetohyperswitchHSEKSClusterKubectlHandlerRole7916FDB1Arn:
          Fn::GetAtt:
            - HSEKSClusterKubectlHandlerRole12043DEB
            - Arn
        referencetohyperswitchhyperswitchvpcisolatedsubnet1Subnet1Subnet0857E849Ref:
          Ref: hyperswitchvpcisolatedsubnet1Subnet1Subnet9D47908C
        referencetohyperswitchhyperswitchvpcisolatedsubnet1Subnet2SubnetF9B1F934Ref:
          Ref: hyperswitchvpcisolatedsubnet1Subnet2SubnetC00C52E2
        referencetohyperswitchhyperswitchvpcdatabaseisolatedsubnet1Subnet1SubnetD568830FRef:
          Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet1Subnet1000CDE4
        referencetohyperswitchhyperswitchvpcdatabaseisolatedsubnet1Subnet2Subnet7594C8BDRef:
          Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet2SubnetFE5772F2
        referencetohyperswitchhyperswitchvpceksworkernodesonezoneSubnet1Subnet2AF0B357Ref:
          Ref: hyperswitchvpceksworkernodesonezoneSubnet1SubnetDF03010D
        referencetohyperswitchhyperswitchvpceksworkernodesonezoneSubnet2Subnet297C4EF8Ref:
          Ref: hyperswitchvpceksworkernodesonezoneSubnet2Subnet85E876F5
        referencetohyperswitchhyperswitchvpcutilszoneSubnet1Subnet12417D21Ref:
          Ref: hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9
        referencetohyperswitchhyperswitchvpcutilszoneSubnet2Subnet43F7E5D6Ref:
          Ref: hyperswitchvpcutilszoneSubnet2Subnet54FB18DF
        referencetohyperswitchhyperswitchvpcservicelayerzoneSubnet1Subnet0BD4AA35Ref:
          Ref: hyperswitchvpcservicelayerzoneSubnet1SubnetD1393109
        referencetohyperswitchhyperswitchvpcservicelayerzoneSubnet2Subnet5343E6F7Ref:
          Ref: hyperswitchvpcservicelayerzoneSubnet2SubnetC7472100
        referencetohyperswitchhyperswitchvpcdatastackzoneSubnet1Subnet41CA5425Ref:
          Ref: hyperswitchvpcdatastackzoneSubnet1Subnet018585ED
        referencetohyperswitchhyperswitchvpcdatastackzoneSubnet2Subnet857C5302Ref:
          Ref: hyperswitchvpcdatastackzoneSubnet2Subnet262C301A
        referencetohyperswitchhyperswitchvpcoutgoingproxylbzoneSubnet1SubnetC1F23C1BRef:
          Ref: hyperswitchvpcoutgoingproxylbzoneSubnet1Subnet40541EC1
        referencetohyperswitchhyperswitchvpcoutgoingproxylbzoneSubnet2Subnet5EFCA03FRef:
          Ref: hyperswitchvpcoutgoingproxylbzoneSubnet2Subnet5B702C5A
        referencetohyperswitchhyperswitchvpcoutgoingproxyzoneSubnet1SubnetBCED7204Ref:
          Ref: hyperswitchvpcoutgoingproxyzoneSubnet1Subnet5C2645ED
        referencetohyperswitchhyperswitchvpcoutgoingproxyzoneSubnet2Subnet52B0FB1CRef:
          Ref: hyperswitchvpcoutgoingproxyzoneSubnet2Subnet9CEF0CD5
        referencetohyperswitchHSEKSCluster5453481FClusterSecurityGroupId:
          Fn::GetAtt:
            - HSEKSClusterE8C0D9C4
            - ClusterSecurityGroupId
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.af-south-1.
            - Ref: AWS::URLSuffix
            - /cdk-hnb659fds-assets-381491845955-af-south-1/66121256234d60639b529c0ebd3a6fc424a3570d93f216bcb6cd2fffc56b1603.json
    DependsOn:
      - HSEKSClusterKubectlHandlerRoleDefaultPolicy22C955DE
      - HSEKSClusterKubectlHandlerRole12043DEB
      - hyperswitchvpcdatastackzoneSubnet1DefaultRouteC53DC630
      - hyperswitchvpcdatastackzoneSubnet1RouteTableAssociation41ED099A
      - hyperswitchvpcdatastackzoneSubnet2DefaultRoute561F56A5
      - hyperswitchvpcdatastackzoneSubnet2RouteTableAssociation42A8233D
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1DefaultRoute97005569
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTableAssociationE41F3146
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2DefaultRoute826D7857
      - hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableAssociation3B2036CD
      - hyperswitchvpceksworkernodesonezoneSubnet1DefaultRoute5F97D10F
      - hyperswitchvpceksworkernodesonezoneSubnet1RouteTableAssociation131D95AF
      - hyperswitchvpceksworkernodesonezoneSubnet2DefaultRouteD75B6ED2
      - hyperswitchvpceksworkernodesonezoneSubnet2RouteTableAssociation7FBA51C8
      - hyperswitchvpcisolatedsubnet1Subnet1DefaultRoute802D1807
      - hyperswitchvpcisolatedsubnet1Subnet1RouteTableAssociation016319F7
      - hyperswitchvpcisolatedsubnet1Subnet2DefaultRoute2CE9B616
      - hyperswitchvpcisolatedsubnet1Subnet2RouteTableAssociationFB26520C
      - hyperswitchvpcoutgoingproxylbzoneSubnet1DefaultRoute1443EB0F
      - hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableAssociationB6D4065B
      - hyperswitchvpcoutgoingproxylbzoneSubnet2DefaultRouteEDD5BFA5
      - hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTableAssociation2EF14CD1
      - hyperswitchvpcoutgoingproxyzoneSubnet1DefaultRouteA24C159F
      - hyperswitchvpcoutgoingproxyzoneSubnet1RouteTableAssociation35BEB283
      - hyperswitchvpcoutgoingproxyzoneSubnet2DefaultRouteE4741B9D
      - hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableAssociation8046B8EF
      - hyperswitchvpcservicelayerzoneSubnet1DefaultRoute6730B405
      - hyperswitchvpcservicelayerzoneSubnet1RouteTableAssociation3BCB92BC
      - hyperswitchvpcservicelayerzoneSubnet2DefaultRoute73A66C31
      - hyperswitchvpcservicelayerzoneSubnet2RouteTableAssociation5B74F829
      - hyperswitchvpcutilszoneSubnet1DefaultRoute9B482EAD
      - hyperswitchvpcutilszoneSubnet1RouteTableAssociation475FCA2B
      - hyperswitchvpcutilszoneSubnet2DefaultRouteB77BFA40
      - hyperswitchvpcutilszoneSubnet2RouteTableAssociationC0B047AC
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource
      aws:asset:path: hyperswitchawscdkawseksKubectlProvider0A1ED638.nested.template.json
      aws:asset:property: TemplateURL
  HSNodegroupRoleA5CDE24A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSWorkerNodePolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKS_CNI_Policy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchAgentServerPolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ReadOnlyAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/HSNodegroupRole/Resource
  HSCloudWatchPolicy49F99323:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudwatch:DescribeAlarmHistory
              - cloudwatch:DescribeAlarms
              - cloudwatch:DescribeAlarmsForMetric
              - cloudwatch:GetInsightRuleReport
              - cloudwatch:GetMetricData
              - cloudwatch:ListMetrics
              - ec2:DescribeInstances
              - ec2:DescribeRegions
              - ec2:DescribeTags
              - logs:DescribeLogGroups
              - logs:GetLogEvents
              - logs:GetLogGroupFields
              - logs:GetQueryResults
              - logs:StartQuery
              - logs:StopQuery
              - tag:GetResources
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: HSCloudWatchPolicy49F99323
      Roles:
        - Ref: HSNodegroupRoleA5CDE24A
    Metadata:
      aws:cdk:path: hyperswitch/HSCloudWatchPolicy/Resource
  CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - iam:CreateOpenIDConnectProvider
                  - iam:DeleteOpenIDConnectProvider
                  - iam:UpdateOpenIDConnectProviderThumbprint
                  - iam:AddClientIDToOpenIDConnectProvider
                  - iam:RemoveClientIDFromOpenIDConnectProvider
    Metadata:
      aws:cdk:path: hyperswitch/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role
  CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-381491845955-af-south-1
        S3Key: 977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65
          - Arn
      Runtime: nodejs20.x
    DependsOn:
      - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65
    Metadata:
      aws:cdk:path: hyperswitch/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler
      aws:asset:path: asset.977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8
      aws:asset:property: Code
  AppConditionJsonCBCBF0A4:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
            - :aud":"sts.amazonaws.com","
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
            - :sub":"system:serviceaccount:hyperswitch:hyperswitch-router-role"}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/AppConditionJson/Resource/Default
  AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: hyperswitch/AWSCDKCfnUtilsProviderCustomResourceProvider/Role
  AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-381491845955-af-south-1
        S3Key: 70dc346d78f37c98f818c01173252d7441864d42268efd4ee44769cbd6f31d24.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
          - Arn
      Runtime: nodejs20.x
    DependsOn:
      - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
    Metadata:
      aws:cdk:path: hyperswitch/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler
      aws:asset:path: asset.70dc346d78f37c98f818c01173252d7441864d42268efd4ee44769cbd6f31d24
      aws:asset:property: Code
  HyperswitchServiceAccountRoleCC06B446:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - AppConditionJsonCBCBF0A4
                  - Value
            Effect: Allow
            Principal:
              Federated:
                Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
        Version: "2012-10-17"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchServiceAccountRole/Resource
  hyperswitchkmskey194D180F:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS key for encrypting the objects in an S3 bucket
      EnableKeyRotation: false
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::381491845955:root
            Resource: "*"
        Version: "2012-10-17"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      PendingWindowInDays: 7
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-kms-key/Resource
  hyperswitchkmskeyAliasD620BE30:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/hyperswitch-kms-key
      TargetKeyId:
        Fn::GetAtt:
          - hyperswitchkmskey194D180F
          - Arn
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-kms-key/Alias/Resource
  HSAWSKMSKeyPolicyEECD5E47:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: kms:*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - hyperswitchkmskey194D180F
                - Arn
          - Action:
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DescribeLoadBalancers
              - secretsmanager:*
              - ssm:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: HSAWSKMSKeyPolicyEECD5E47
      Roles:
        - Ref: HyperswitchServiceAccountRoleCC06B446
    Metadata:
      aws:cdk:path: hyperswitch/HSAWSKMSKeyPolicy/Resource
  hyperswitchlambdarole1630D4B4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: kms:*
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - hyperswitchkmskey194D180F
                    - Arn
              - Action:
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:DescribeLoadBalancers
                  - secretsmanager:*
                  - ssm:*
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: use-kms-sm-s3
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-lambda-role/Resource
  hyperswitchkmsuserdatasecretF7C8970E:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: KMS encryptable secrets for Hyperswitch
      Name: HyperswitchKmsDataSecret
      SecretString:
        Fn::Join:
          - ""
          - - '{"db_password":"hyperSw1tch","jwt_secret":"test_admin","master_key":"45F5FF4EAAFD95D38AB001BD97EB5516D709C9ADA0037176829843E520BF3938","admin_api_key":"hyperSw1tch_api","kms_id":"'
            - Ref: hyperswitchkmskey194D180F
            - '","region":"af-south-1","locker_public_key":"locker-key","tenant_private_key":"locker-key"}'
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-kms-userdata-secret/Resource
  hyperswitchkmsencryptCC1C2FBF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import os
          import json
          import boto3
          import urllib3
          import base64
          from dataclasses import dataclass

          http = urllib3.PoolManager()


          def worker():

              dummy_val = "dummy_val"

              api_hash_key = "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"
              secrets_manager = boto3.client('secretsmanager')
              ssm_manager = boto3.client('ssm')

              kms_client = boto3.client('kms')

              secret_arn = os.environ['SECRET_MANAGER_ARN']
              secret_value_response = secrets_manager.get_secret_value(
                  SecretId=secret_arn)
              credentials = json.loads(secret_value_response['SecretString'])

              kms_fun = kms_encryptor(
                  credentials["kms_id"], credentials["region"], kms_client)

              def enc_pl(x): return kms_fun(credentials[x])
              def pl(x): return credentials[x]

              db_pass = enc_pl("db_password")
              master_key = enc_pl("master_key")
              admin_api_key = enc_pl("admin_api_key")
              jwt_secret = enc_pl("jwt_secret")

              locker_public_key = enc_pl("locker_public_key")

              tenant_private_key = enc_pl("tenant_private_key")

              dummy_val = kms_fun(dummy_val)
              kms_encrypted_api_hash_key = kms_fun(api_hash_key)

              secretval = {
                  "db-pass": db_pass,
                  "master-key": master_key,
                  "admin-api-key": admin_api_key,
                  "jwt-secret": jwt_secret,
                  "dummy-val": dummy_val,
                  "kms-encrypted-api-hash-key": kms_encrypted_api_hash_key,
                  "locker-public-key": locker_public_key,
                  "tenant-private-key": tenant_private_key,
              }

              for key in secretval:
                  store_parameter(ssm_manager, key, secretval[key])

          def kms_encryptor(key_id: str, region: str, kms_client):
              return lambda data: base64.b64encode(kms_client.encrypt(KeyId=key_id, Plaintext=data)["CiphertextBlob"]).decode("utf-8")


          def send(event, context, responseStatus, responseData, physicalResourceId=None, noEcho=False, reason=None):
              responseUrl = event['ResponseURL']

              responseBody = {
                  'Status': responseStatus,
                  'Reason': reason or "See the details in CloudWatch Log Stream: {}".format(context.log_stream_name),
                  'PhysicalResourceId': physicalResourceId or context.log_stream_name,
                  'StackId': event['StackId'],
                  'RequestId': event['RequestId'],
                  'LogicalResourceId': event['LogicalResourceId'],
                  'NoEcho': noEcho,
                  'Data': responseData
              }

              json_responseBody = json.dumps(responseBody)

              print("Response body:")
              print(json_responseBody)

              headers = {
                  'content-type': '',
                  'content-length': str(len(json_responseBody))
              }

              try:
                  response = http.request(
                      'PUT', responseUrl, headers=headers, body=json_responseBody)
                  print("Status code:", response.status)
                  return responseBody

              except Exception as e:

                  print("send(..) failed executing http.request(..):", e)
                  return {}


          def store_parameter(ssm, key, value):
              ssm.put_parameter(Name="/hyperswitch/{}".format(key),
                                Value=value, Overwrite=True, Type='String', Tier='Advanced')


          def lambda_handler(event, context):
              try:
                  if event['RequestType'] == 'Create':
                      try:
                          worker()
                          message = "Completed Successfully"
                          status = "SUCCESS"
                      except Exception as e:
                          message = str(e)
                          status = "FAILED"

                      send(event, context, status,
                           {
                               "message": message
                           })
                  elif event['RequestType'] == 'Delete':
                      keys = ["db-pass", "master-key", "admin-api-key", "jwt-secret", "dummy-val", "kms-encrypted-api-hash-key", "locker-public-key", "tenant-private-key"]
                      ssm = boto3.client('ssm')
                      for key in keys:
                          parameter_name="/hyperswitch/{}".format(key)
                          try:
                              ssm.delete_parameter(Name=parameter_name)
                          except:
                              print("Parameter {} doesn't exist.".format(parameter_name))

                      send(event, context, "SUCCESS", {"message": "No action required"})
                  else:
                      send(event, context, "SUCCESS", {"message": "No action required"})
              except Exception as e:  # Use 'Exception as e' to properly catch and define the exception variable
                  send(event, context, "FAILED", {"message": str(e)})
                  return str(e)
              # Return a success message
              return '{ "status": 200, "message": "success" }'
      Environment:
        Variables:
          SECRET_MANAGER_ARN:
            Ref: hyperswitchkmsuserdatasecretF7C8970E
      FunctionName: HyperswitchKmsEncryptionLambda
      Handler: index.lambda_handler
      Role:
        Fn::GetAtt:
          - hyperswitchlambdarole1630D4B4
          - Arn
      Runtime: python3.9
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      Timeout: 900
    DependsOn:
      - hyperswitchlambdarole1630D4B4
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-kms-encrypt/Resource
  HyperswitchKmsEncryptionCR:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - hyperswitchkmsencryptCC1C2FBF
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchKmsEncryptionCR/Default
  HSLBSecurityGroup4A3E3CBA:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/HSLBSecurityGroup
      GroupName: hs-loadbalancer-sg
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:ALL TRAFFIC
          IpProtocol: "-1"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/HSLBSecurityGroup/Resource
  HSLBSecurityGrouptohyperswitchHSEKSClusterClusterSecurityGroup28DB9329ALLTRAFFIC082859F7:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: to hyperswitchHSEKSClusterClusterSecurityGroup28DB9329:ALL TRAFFIC
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - HSEKSClusterE8C0D9C4
          - ClusterSecurityGroupId
      GroupId:
        Fn::GetAtt:
          - HSLBSecurityGroup4A3E3CBA
          - GroupId
      IpProtocol: "-1"
    Metadata:
      aws:cdk:path: hyperswitch/HSLBSecurityGroup/to hyperswitchHSEKSClusterClusterSecurityGroup28DB9329:ALL TRAFFIC
  HyperswitchSDKBucketE66F5573:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: hyperswitch-sdk-381491845955-af-south-1
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchSDKBucket/Resource
  HyperswitchSDKBucketPolicyB1A9FE8C:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: HyperswitchSDKBucketE66F5573
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - HyperswitchSDKBucketE66F5573
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - HyperswitchSDKBucketE66F5573
                        - Arn
                    - /*
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - SdkOAI62745389
                  - S3CanonicalUserId
            Resource:
              - Fn::GetAtt:
                  - HyperswitchSDKBucketE66F5573
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - HyperswitchSDKBucketE66F5573
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - SdkOAI62745389
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - HyperswitchSDKBucketE66F5573
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchSDKBucket/Policy/Resource
  HyperswitchSDKBucketAutoDeleteObjectsCustomResource5E7A8DD8:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: HyperswitchSDKBucketE66F5573
    DependsOn:
      - HyperswitchSDKBucketPolicyB1A9FE8C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchSDKBucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: hyperswitch/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-381491845955-af-south-1
        S3Key: faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip
      Timeout: 900
      MemorySize: 128
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs20.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: HyperswitchSDKBucketE66F5573
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: hyperswitch/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6
      aws:asset:property: Code
  SdkOAI62745389:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allows CloudFront to reach the bucket
    Metadata:
      aws:cdk:path: hyperswitch/SdkOAI/Resource
  sdkDistributionCFDistribution1434D010:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CacheBehaviors:
          - AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: none
              QueryString: false
            PathPattern: /*
            TargetOriginId: origin1
            ViewerProtocolPolicy: allow-all
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: allow-all
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            DomainName:
              Fn::GetAtt:
                - HyperswitchSDKBucketE66F5573
                - RegionalDomainName
            Id: origin1
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: SdkOAI62745389
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    DependsOn:
      - HyperswitchSDKBucketAutoDeleteObjectsCustomResource5E7A8DD8
      - HyperswitchSDKBucketPolicyB1A9FE8C
      - HyperswitchSDKBucketE66F5573
    Metadata:
      aws:cdk:path: hyperswitch/sdkDistribution/CFDistribution
  Keymanagerkeymanagerkmsrole84910F93:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - KeymanagerConditionJson61FB9B89
                  - Value
            Effect: Allow
            Principal:
              Federated:
                Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - keymanagerkmskey4C62A6D2
                    - Arn
            Version: "2012-10-17"
          PolicyName: kms-role-keymanager
      Tags:
        - Key: Stack
          Value: Keymanager
        - Key: StackName
          Value: keymanager
    Metadata:
      aws:cdk:path: hyperswitch/Keymanager/keymanager-kms-role/Resource
  keymanagerkmskey4C62A6D2:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS key for encrypting the key for Keymanager
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::381491845955:root
            Resource: "*"
        Version: "2012-10-17"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      PendingWindowInDays: 7
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-kms-key/Resource
  keymanagerkmskeyAlias3A0FD6DE:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/keymanager-kms-key
      TargetKeyId:
        Fn::GetAtt:
          - keymanagerkmskey4C62A6D2
          - Arn
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-kms-key/Alias/Resource
  KeymanagerDBSGAEC91BF0:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/Keymanager-DB-SG
      GroupName: Keymanager-DB-SG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/Keymanager-DB-SG/Resource
  KeymanagerDBSGfromhyperswitchHSEKSClusterClusterSecurityGroup28DB932954325C1E3226:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchHSEKSClusterClusterSecurityGroup28DB9329:5432
      FromPort: 5432
      GroupId:
        Fn::GetAtt:
          - KeymanagerDBSGAEC91BF0
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - HSEKSClusterE8C0D9C4
          - ClusterSecurityGroupId
      ToPort: 5432
    Metadata:
      aws:cdk:path: hyperswitch/Keymanager-DB-SG/from hyperswitchHSEKSClusterClusterSecurityGroup28DB9329:5432
  keymanagerdbsecret1340E0B8:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Database Secret credentials
      Name: keymanager-db-secret
      SecretString: '{"dbname":"keymanager_db","username":"keymanager_db_user","password":"pass1234"}'
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-db-secret/Resource
  keymanagerdbsecretAttachment239637F1:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: keymanagerdbsecret1340E0B8
      TargetId:
        Ref: keymanagerdbclusterF55179C7
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-db-secret/Attachment/Resource
  keymanagerdbclusterSubnetsF6475ECD:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for keymanager-db-cluster database
      SubnetIds:
        - Ref: hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5
        - Ref: hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-db-cluster/Subnets/Default
  keymanagerdbclusterF55179C7:
    Type: AWS::RDS::DBCluster
    Properties:
      CopyTagsToSnapshot: true
      DBClusterParameterGroupName: default.aurora-postgresql14
      DBSubnetGroupName:
        Ref: keymanagerdbclusterSubnetsF6475ECD
      DatabaseName: keymanager_db
      Engine: aurora-postgresql
      EngineVersion: "14.11"
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: keymanagerdbsecret1340E0B8
            - :SecretString:password::}}
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: keymanagerdbsecret1340E0B8
            - :SecretString:username::}}
      Port: 5432
      StorageEncrypted: true
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - KeymanagerDBSGAEC91BF0
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-db-cluster/Resource
  keymanagerdbclusterWriterInstance57B84719:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: keymanagerdbclusterF55179C7
      DBInstanceClass: db.t3.medium
      Engine: aurora-postgresql
      PromotionTier: 0
      PubliclyAccessible: false
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    DependsOn:
      - hyperswitchvpcdatabasezoneSubnet1RouteTableAssociationBEA5DF69
      - hyperswitchvpcdatabasezoneSubnet2RouteTableAssociationC3BEE407
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-db-cluster/Writer Instance/Resource
  KeymanagerConditionJson61FB9B89:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
            - :aud":"sts.amazonaws.com","
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
            - :sub":"system:serviceaccount:keymanager:keymanager-role"}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/KeymanagerConditionJson/Resource/Default
  hyperswitchkeymanagerlambdarole54AAE41C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: kms:*
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - keymanagerkmskey4C62A6D2
                    - Arn
              - Action:
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:DescribeLoadBalancers
                  - secretsmanager:*
                  - ssm:*
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: use-kms-sm
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-keymanager-lambda-role/Resource
  keymanagerkmsuserdatasecret1B0097FE:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: KMS encryptable secrets for Keymanager
      Name: KeymanagerKmsDataSecret
      SecretString:
        Fn::Join:
          - ""
          - - '{"db_pass":"pass1234","kms_id":"'
            - Ref: keymanagerkmskey4C62A6D2
            - '","region":"af-south-1","ca_cert":"-----BEGIN CERTIFICATE-----\nMIIDZTCCAk2gAwIBAgIUHaqd1hwoAfMCoeMTNiAURfjMYa8wDQYJKoZIhvcNAQEL\nBQAwQjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRIwEAYDVQQKDAlDcmlwdGEg\nQ0ExEjAQBgNVBAMMCUNyaXB0YSBDQTAeFw0yNTA0MTcxMjIxMjhaFw0zNTA0MTUx\nMjIxMjhaMEIxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTESMBAGA1UECgwJQ3Jp\ncHRhIENBMRIwEAYDVQQDDAlDcmlwdGEgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\nDwAwggEKAoIBAQC+IVVkv6H0OqhJawN/Vfz5ubc1tzOCOpyzJc/Mq+sN9VQ6y475\nDHn8W+s38Cc2wLGc84r8tIXv5Ovn2ytPzzZSG6EVGR3sdWGqWguxZIlVPOMiXW10\nSaYNX3fNq/s+b0Zbxt9xWoUOo8XsSVmWXnXiORVVrtnTyiD+OyZMnSPR74qPTrzr\n4nNJ/mnC1qw5EuanlYUgeI8PsxeejeZBi0ICgTFC6nWIdqY/QKkmye4MSMf2duvA\nx93zuhwourZ5M+Rph1+sKGj+o18XmprPGpUoQUa136IFSHaLUjDKUH05MzyG+Xbs\nw8owXHPjE+eLrNApk+n3oqfhCVQ5TKMh/jabAgMBAAGjUzBRMB0GA1UdDgQWBBSh\nbk27wRW6B6BOL2JpflYRFoeYATAfBgNVHSMEGDAWgBShbk27wRW6B6BOL2JpflYR\nFoeYATAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQC9kXG65HhX\nX8Chp/Sy3jLrXWCppa7A0vXiKXj8T6GRSGB7ES4o1vxx+cJXLBJM1G+1uLrzMGzv\nGoEtys9dktzu4wVX+/EFkoncR7m33+0tjUkXHvq2ybnTrp5icTn/kHrJ8q8e/M0J\n3M28k44Fal0wvL8WFHMgOjPmIrs0BTQatlr0IkrxbUCTT3cy1KzrmQaB7oIrRiAC\nabK1XeM29zB23b3uTHznNyxe3rGOtu0pSkg8SuPNu9KCGyyo9b2XTd+idO78slua\nUGWo5WkJK1TPcbyYz8Vgyf9LFhOM5TcWELV+vXpC+FOI2WCjiXrSkVG/Npw55DjV\ne9QJGgRCW9qr\n-----END CERTIFICATE-----\n","tls_key":"-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCV3irl8XpQWfdr\nQupE/NjI4OlOKlKWO9DJZVwcETYaYc6y/0qPUpnkSJDaTVKWU2aKRXgBu0Cjlpen\nXZ/XHGQ6pHYUxvPq+5HZuATojLKMj3YV2ysPnhhp+RFGFgQ1UcCy43J1pK0WPzdJ\nmTSRtYnBG7Zds5NPqd3C5W0FGiORZ5LB+Yev0HAHGyDnhCzAaDufWXYucKmZ5HQ4\niupD5p8vSQoXK9MdqZNqntP/RqlkIBUXdxrwEwVGFIhhVPOkhitsb51O54QJHXU7\nV/lmKEak4d071COEcKmHy5ZCFJmMoCJPg/kPq9pn6lmunpBCZFxZgUU/dlAd7BS6\nYkLoXAurAgMBAAECggEACEW6pXWmVEAbDaMkbklsp+3uQt/ILj3AARXktzHmBB/I\n+o1n7rBXCUhOIpapC94vp0s9XA8beswps9XRqFyLVcdVM0FmHl7jhpqHPtThWCvl\nD0DJSDPoUhUq9Gzrr4vDMLyoSUEdQsCbiyb3RWG5aFzgvJxYccnFEWh7k5AFTZXN\n3JQ8Sbro7ukJv7Y8dLCsAQp9oST8RZUtY9Exe4p2d6VLKOFoycUHKB4OvnNldnai\nCw0yawSO3EonjAoGN7uAlaFIszDq66jVszXqgKtJ2hIuW4D3nQ9aTG4nUDifcatt\nkYNFTdH17aQcoER0tZgrLWda0+PYsS91MYiMlBjCUQKBgQDJgerKEt/QFz9rUrym\njyXnIp5NmKPBt6Dj+di/TM76VhVNxHt+JD4pZdIU+J3rZM9cYtMildVqCoCTeJCj\nFZZHk/0Q1BygUXEfgAS6+oHwGNbXWmHlQulxPwL2ApWr1dNW6ZS5xQZ/bzgdf60Y\npIlVN2whu0PrKioV//fj2JgFMQKBgQC+ZU9BGctjwyKtbN4oZVWrzHxpU9Zb7+Pj\nZYqNa8qK55Ww6sw81H3+5wbtM3HeT/uosv7xgh6edqHNnqsslyp2dy/4DCPM7M0c\nKNQ8t1CIDv7JCxHZn4twxZW6KFwHWLBUTSRe9BQ61gR7onb4lgtgwSos8kxTHdqG\nP3DEkRGXmwKBgEylfgke5MLiFN1duyQfjus737rkNGWa0zfj8O3S6WePFstd0RtJ\n7dsRP7d6WZcP4U/ixyyAkYykMgPl+B4QN/lB8SBVjg3s7Hpu113Hq2UIDbAcUOBD\nc0gAD8BDe2rBCoIkls2Sg8Y1J8MQrWaSLyqayiaKdGsevqNfmYqw+CIBAoGBAKgq\nWUcZ3mA+MXnWR56Mao/0bAqn5xSLHNBzll300A/CHqAFsuEjmimzqpWFs9R09sV5\nW966XAsAo0c3Ft+qoPHDshW3u0M8AKoXkeYSz8ls3TN7WIfL+GBh1C55iVdfyVac\nUDyh/uA8ufbtd4F3HZOW6YaLeEiNfL7Id/TWYSBzAoGAWCv1sFjNb149+iuT3nuF\n3ih+iSOboDnOCmAKxWLCrM2/aGnEls/Bm2bxp7TANEw9CRzy0e6ZY4i1ZXqxPU6C\ncAkFlehw5fZaQ6x8ZrmqxehXSvis38T08Eil37WJVOYc5tpvTTLiQxeIpkmOecJI\nprpL9/EU1zL6QoL18vMZ68o=\n-----END PRIVATE KEY-----\n","tls_cert":"-----BEGIN CERTIFICATE-----\nMIIDozCCAougAwIBAgIUTgabEDVZzozr+RVLTJn3vo2KkPIwDQYJKoZIhvcNAQEL\nBQAwQjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRIwEAYDVQQKDAlDcmlwdGEg\nQ0ExEjAQBgNVBAMMCUNyaXB0YSBDQTAeFw0yNTA0MTcxMjIxMjhaFw0zNTA0MTUx\nMjIxMjhaMF0xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEPMA0GA1UECgwGQ3Jp\ncHRhMTAwLgYDVQQDDCdrZXltYW5hZ2VyLmtleW1hbmFnZXIuc3ZjLmNsdXN0ZXIu\nbG9jYWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCV3irl8XpQWfdr\nQupE/NjI4OlOKlKWO9DJZVwcETYaYc6y/0qPUpnkSJDaTVKWU2aKRXgBu0Cjlpen\nXZ/XHGQ6pHYUxvPq+5HZuATojLKMj3YV2ysPnhhp+RFGFgQ1UcCy43J1pK0WPzdJ\nmTSRtYnBG7Zds5NPqd3C5W0FGiORZ5LB+Yev0HAHGyDnhCzAaDufWXYucKmZ5HQ4\niupD5p8vSQoXK9MdqZNqntP/RqlkIBUXdxrwEwVGFIhhVPOkhitsb51O54QJHXU7\nV/lmKEak4d071COEcKmHy5ZCFJmMoCJPg/kPq9pn6lmunpBCZFxZgUU/dlAd7BS6\nYkLoXAurAgMBAAGjdjB0MDIGA1UdEQQrMCmCJ2tleW1hbmFnZXIua2V5bWFuYWdl\nci5zdmMuY2x1c3Rlci5sb2NhbDAdBgNVHQ4EFgQU/idg7+TR72jGakUuF0k3mIEr\nChcwHwYDVR0jBBgwFoAUoW5Nu8EVugegTi9iaX5WERaHmAEwDQYJKoZIhvcNAQEL\nBQADggEBALDgkA0Ae3PJxWXxJx1Sn6K3ejgd4yvlhecwH7uBqU15zXAZVGaWgpyo\nl5qJan5wWzvOdrUd1pTd/i8yHn0zpQPLsHs9CA2wJJbGLS0tB9oI1Z4F5QeCT7tB\nK99Ib/WPzA3Z9+0IjSJ1u+h60VTM4cis9zJwaeZvjpqw1+oQfH8yliislzpHqLSC\ne7tj0ux6CfN4sYJP3inlGgGHXL1Zg9D8W7RKlRHoEixtHvOwyTrFbLM0t52XBQBE\nBUrS59YJdzhQLP0jzrq5tq2eMmS72YsPHTpBjsS6kDMqv3+/ZKmfx0uJy0Qbkshe\nASFfmYnZyxefqTN4X7yqySS9mZ5b0UA=\n-----END CERTIFICATE-----\n"}'
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-kms-userdata-secret/Resource
  keymanagerkmsencryptF5AC1FAC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import os
          import json
          import boto3
          import urllib3
          import base64

          http = urllib3.PoolManager()


          def worker():
              secrets_manager = boto3.client('secretsmanager')
              ssm_manager = boto3.client('ssm')

              kms_client = boto3.client('kms')

              secret_arn = os.environ['SECRET_MANAGER_ARN']
              secret_value_response = secrets_manager.get_secret_value(
                  SecretId=secret_arn)
              credentials = json.loads(secret_value_response['SecretString'])

              kms_fun = kms_encryptor(
                  credentials["kms_id"], credentials["region"], kms_client)

              def enc_pl(x): return kms_fun(credentials[x])
              def pl(x): return credentials[x]

              db_pass = enc_pl("db_pass")
              ca_cert = enc_pl("ca_cert")
              tls_key = enc_pl("tls_key")
              tls_cert = enc_pl("tls_cert")

              secretval = {
                  "db_pass": db_pass,
                  "ca_cert": ca_cert,
                  "tls_key": tls_key,
                  "tls_cert": tls_cert
              }

              for key in secretval:
                  store_parameter(ssm_manager, key, secretval[key])


          def kms_encryptor(key_id: str, region: str, kms_client):
              return lambda data: base64.b64encode(kms_client.encrypt(KeyId=key_id, Plaintext=data)["CiphertextBlob"]).decode("utf-8")


          def send(event, context, responseStatus, responseData, physicalResourceId=None, noEcho=False, reason=None):
              responseUrl = event['ResponseURL']

              responseBody = {
                  'Status': responseStatus,
                  'Reason': reason or "See the details in CloudWatch Log Stream: {}".format(context.log_stream_name),
                  'PhysicalResourceId': physicalResourceId or context.log_stream_name,
                  'StackId': event['StackId'],
                  'RequestId': event['RequestId'],
                  'LogicalResourceId': event['LogicalResourceId'],
                  'NoEcho': noEcho,
                  'Data': responseData
              }

              json_responseBody = json.dumps(responseBody)

              print("Response body:")
              print(json_responseBody)

              headers = {
                  'content-type': '',
                  'content-length': str(len(json_responseBody))
              }

              try:
                  response = http.request(
                      'PUT', responseUrl, headers=headers, body=json_responseBody)
                  print("Status code:", response.status)
                  return responseBody

              except Exception as e:

                  print("send(..) failed executing http.request(..):", e)
                  return {}


          def store_parameter(ssm, key, value):
              ssm.put_parameter(Name="/keymanager/{}".format(key),
                                Value=value, Overwrite=True, Type='String', Tier='Advanced')


          def lambda_handler(event, context):
              try:
                  if event['RequestType'] == 'Create':
                      try:
                          worker()
                          message = "Completed Successfully"
                          status = "SUCCESS"
                      except Exception as e:
                          message = str(e)
                          status = "FAILED"

                      send(event, context, status,
                           {
                               "message": message
                           })
                  elif event['RequestType'] == 'Delete':
                      keys = ["db_pass", "ca_cert", "tls_key", "tls_cert"]
                      ssm = boto3.client('ssm')
                      for key in keys:
                          parameter_name = "/keymanager/{}".format(key)
                          try:
                              ssm.delete_parameter(Name=parameter_name)
                          except:
                              print("Parameter {} doesn't exist.".format(parameter_name))

                      send(event, context, "SUCCESS", {"message": "No action required"})
                  else:
                      send(event, context, "SUCCESS", {"message": "No action required"})
              except Exception as e:  # Use 'Exception as e' to properly catch and define the exception variable
                  send(event, context, "FAILED", {"message": str(e)})
                  return str(e)
              # Return a success message
              return '{ "status": 200, "message": "success" }'
      Environment:
        Variables:
          SECRET_MANAGER_ARN:
            Ref: keymanagerkmsuserdatasecret1B0097FE
      FunctionName: KeymanagerKmsEncryptionLambda
      Handler: index.lambda_handler
      Role:
        Fn::GetAtt:
          - hyperswitchkeymanagerlambdarole54AAE41C
          - Arn
      Runtime: python3.9
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      Timeout: 900
    DependsOn:
      - hyperswitchkeymanagerlambdarole54AAE41C
    Metadata:
      aws:cdk:path: hyperswitch/keymanager-kms-encrypt/Resource
  KeymanagerKmsEncryptionCR:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - keymanagerkmsencryptF5AC1FAC
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/KeymanagerKmsEncryptionCR/Default
  proxyconfigbucket69345A66:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: proxy-config-bucket-381491845955-af-south-1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/proxy-config-bucket/Resource
  proxyconfigbucketPolicyA38B32AE:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: proxyconfigbucket69345A66
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - proxyconfigbucket69345A66
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - proxyconfigbucket69345A66
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: hyperswitch/proxy-config-bucket/Policy/Resource
  proxyconfigbucketAutoDeleteObjectsCustomResource3EDB0C0A:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: proxyconfigbucket69345A66
    DependsOn:
      - proxyconfigbucketPolicyA38B32AE
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/proxy-config-bucket/AutoDeleteObjectsCustomResource/Default
  HyperswitchWAFWebACLB97720B8:
    Type: AWS::WAFv2::WebACL
    Properties:
      DefaultAction:
        Allow: {}
      Rules:
        - Action:
            Allow: {}
          Name: allow_merchant_admin
          Priority: 0
          Statement:
            ByteMatchStatement:
              FieldToMatch:
                UriPath: {}
              PositionalConstraint: ENDS_WITH
              SearchString: merchant_admin
              TextTransformations:
                - Priority: 0
                  Type: NONE
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: allow_merchant_admin
            SampledRequestsEnabled: true
        - Action:
            Allow: {}
          Name: health_status
          Priority: 1
          Statement:
            ByteMatchStatement:
              FieldToMatch:
                SingleHeader:
                  Name: x-hyperswitch-betterstack
              PositionalConstraint: EXACTLY
              SearchString: Betterstack-ironman
              TextTransformations:
                - Priority: 0
                  Type: NONE
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: health_status
            SampledRequestsEnabled: true
        - Action:
            Allow: {}
          Name: allow_pingdom
          Priority: 2
          Statement:
            ByteMatchStatement:
              FieldToMatch:
                SingleHeader:
                  Name: user-agent
              PositionalConstraint: EXACTLY
              SearchString: Pingdom.com_bot_version_1.4_(http://www.pingdom.com/)
              TextTransformations:
                - Priority: 0
                  Type: NONE
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: allow_pingdom
            SampledRequestsEnabled: true
        - Name: AWS-AWSManagedRulesKnownBadInputsRuleSet
          OverrideAction:
            None: {}
          Priority: 3
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesKnownBadInputsRuleSet
              RuleActionOverrides:
                - ActionToUse:
                    Block: {}
                  Name: JavaDeserializationRCE_BODY
                - ActionToUse:
                    Block: {}
                  Name: JavaDeserializationRCE_URIPATH
                - ActionToUse:
                    Block: {}
                  Name: JavaDeserializationRCE_QUERYSTRING
                - ActionToUse:
                    Block: {}
                  Name: JavaDeserializationRCE_HEADER
                - ActionToUse:
                    Block: {}
                  Name: Host_localhost_HEADER
                - ActionToUse:
                    Block: {}
                  Name: PROPFIND_METHOD
                - ActionToUse:
                    Block: {}
                  Name: ExploitablePaths_URIPATH
                - ActionToUse:
                    Block: {}
                  Name: Log4JRCE_QUERYSTRING
                - ActionToUse:
                    Block: {}
                  Name: Log4JRCE_BODY
                - ActionToUse:
                    Block: {}
                  Name: Log4JRCE_URIPATH
                - ActionToUse:
                    Block: {}
                  Name: Log4JRCE_HEADER
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesKnownBadInputsRuleSet
            SampledRequestsEnabled: true
        - Name: AWS-AWSManagedRulesCommonRuleSet
          OverrideAction:
            None: {}
          Priority: 4
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesCommonRuleSet
              RuleActionOverrides:
                - ActionToUse:
                    Allow: {}
                  Name: NoUserAgent_HEADER
                - ActionToUse:
                    Block: {}
                  Name: UserAgent_BadBots_HEADER
                - ActionToUse:
                    Block: {}
                  Name: SizeRestrictions_QUERYSTRING
                - ActionToUse:
                    Block: {}
                  Name: SizeRestrictions_Cookie_HEADER
                - ActionToUse:
                    Allow: {}
                  Name: SizeRestrictions_BODY
                - ActionToUse:
                    Block: {}
                  Name: SizeRestrictions_URIPATH
                - ActionToUse:
                    Allow: {}
                  Name: EC2MetaDataSSRF_BODY
                - ActionToUse:
                    Block: {}
                  Name: EC2MetaDataSSRF_COOKIE
                - ActionToUse:
                    Block: {}
                  Name: EC2MetaDataSSRF_URIPATH
                - ActionToUse:
                    Block: {}
                  Name: GenericLFI_URIPATH
                - ActionToUse:
                    Block: {}
                  Name: GenericLFI_QUERYARGUMENTS
                - ActionToUse:
                    Block: {}
                  Name: EC2MetaDataSSRF_QUERYARGUMENTS
                - ActionToUse:
                    Block: {}
                  Name: GenericLFI_BODY
                - ActionToUse:
                    Block: {}
                  Name: RestrictedExtensions_URIPATH
                - ActionToUse:
                    Block: {}
                  Name: RestrictedExtensions_QUERYARGUMENTS
                - ActionToUse:
                    Block: {}
                  Name: GenericRFI_QUERYARGUMENTS
                - ActionToUse:
                    Block: {}
                  Name: GenericRFI_BODY
                - ActionToUse:
                    Block: {}
                  Name: GenericRFI_URIPATH
                - ActionToUse:
                    Block: {}
                  Name: CrossSiteScripting_COOKIE
                - ActionToUse:
                    Block: {}
                  Name: CrossSiteScripting_QUERYARGUMENTS
                - ActionToUse:
                    Block: {}
                  Name: CrossSiteScripting_BODY
                - ActionToUse:
                    Block: {}
                  Name: CrossSiteScripting_URIPATH
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesCommonRuleSet
            SampledRequestsEnabled: true
        - Name: AWS-AWSManagedRulesSQLiRuleSet
          OverrideAction:
            None: {}
          Priority: 5
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesSQLiRuleSet
              RuleActionOverrides:
                - ActionToUse:
                    Allow: {}
                  Name: SQLi_BODY
                - ActionToUse:
                    Block: {}
                  Name: SQLiExtendedPatterns_QUERYARGUMENTS
                - ActionToUse:
                    Block: {}
                  Name: SQLi_QUERYARGUMENTS
                - ActionToUse:
                    Block: {}
                  Name: SQLi_COOKIE
                - ActionToUse:
                    Block: {}
                  Name: SQLi_URIPATH
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesSQLiRuleSet
            SampledRequestsEnabled: true
        - Name: AWS-AWSManagedRulesAdminProtectionRuleSet
          OverrideAction:
            None: {}
          Priority: 6
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesAdminProtectionRuleSet
              RuleActionOverrides:
                - ActionToUse:
                    Block: {}
                  Name: AdminProtection_URIPATH
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesAdminProtectionRuleSet
            SampledRequestsEnabled: true
        - Name: AWS-AWSManagedRulesAmazonIpReputationList
          OverrideAction:
            None: {}
          Priority: 7
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesAmazonIpReputationList
              RuleActionOverrides:
                - ActionToUse:
                    Block: {}
                  Name: AWSManagedIPDDoSList
                - ActionToUse:
                    Block: {}
                  Name: AWSManagedIPReputationList
                - ActionToUse:
                    Block: {}
                  Name: AWSManagedReconnaissanceList
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesAmazonIpReputationList
            SampledRequestsEnabled: true
        - Name: AWS-AWSManagedRulesLinuxRuleSet
          OverrideAction:
            None: {}
          Priority: 8
          Statement:
            ManagedRuleGroupStatement:
              Name: AWSManagedRulesLinuxRuleSet
              RuleActionOverrides:
                - ActionToUse:
                    Block: {}
                  Name: LFI_URIPATH
                - ActionToUse:
                    Block: {}
                  Name: LFI_QUERYSTRING
              VendorName: AWS
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesLinuxRuleSet
            SampledRequestsEnabled: true
      Scope: REGIONAL
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VisibilityConfig:
        CloudWatchMetricsEnabled: true
        MetricName: WebACL
        SampledRequestsEnabled: true
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchWAF/WebACL
  HyperswitchWAFWebACLLogging1C8A44B4:
    Type: AWS::WAFv2::LoggingConfiguration
    Properties:
      LogDestinationConfigs:
        - Fn::GetAtt:
            - awsWAFLogsHyperswitch5BCE71D5
            - Arn
      ResourceArn:
        Fn::GetAtt:
          - HyperswitchWAFWebACLB97720B8
          - Arn
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchWAF/WebACLLogging
  serverLogsHyperswitchAC2B0DB5:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: serveraccesslogs-hyperswitch-381491845955-af-south-1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/serverLogsHyperswitch/Resource
  serverLogsHyperswitchPolicyB68B6246:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: serverLogsHyperswitchAC2B0DB5
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - serverLogsHyperswitchAC2B0DB5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - serverLogsHyperswitchAC2B0DB5
                        - Arn
                    - /*
          - Action: s3:PutObject
            Condition:
              StringEquals:
                aws:SourceAccount: "381491845955"
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - serverLogsHyperswitchAC2B0DB5
                      - Arn
                  - /*
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - serverLogsHyperswitchAC2B0DB5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - serverLogsHyperswitchAC2B0DB5
                        - Arn
                    - /*
          - Action: s3:PutObject
            Condition:
              ArnLike:
                aws:SourceArn:
                  Fn::GetAtt:
                    - awsWAFLogsHyperswitch5BCE71D5
                    - Arn
              StringEquals:
                aws:SourceAccount: "381491845955"
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - serverLogsHyperswitchAC2B0DB5
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: hyperswitch/serverLogsHyperswitch/Policy/Resource
  serverLogsHyperswitchAutoDeleteObjectsCustomResource64124E35:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: serverLogsHyperswitchAC2B0DB5
    DependsOn:
      - serverLogsHyperswitchPolicyB68B6246
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/serverLogsHyperswitch/AutoDeleteObjectsCustomResource/Default
  awsWAFLogsHyperswitch5BCE71D5:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: aws-waf-logs-hyperswitch-381491845955-af-south-1
      LoggingConfiguration:
        DestinationBucketName:
          Ref: serverLogsHyperswitchAC2B0DB5
        TargetObjectKeyFormat:
          SimplePrefix: {}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/awsWAFLogsHyperswitch/Resource
  awsWAFLogsHyperswitchPolicyD9537684:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: awsWAFLogsHyperswitch5BCE71D5
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - awsWAFLogsHyperswitch5BCE71D5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - awsWAFLogsHyperswitch5BCE71D5
                        - Arn
                    - /*
          - Action: s3:PutObject
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
                aws:SourceAccount: "381491845955"
              ArnLike:
                aws:SourceArn: arn:aws:logs:af-south-1:381491845955:*
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - awsWAFLogsHyperswitch5BCE71D5
                      - Arn
                  - /AWSLogs/*
          - Action: s3:GetBucketAcl
            Condition:
              StringEquals:
                aws:SourceAccount: "381491845955"
              ArnLike:
                aws:SourceArn: arn:aws:logs:af-south-1:381491845955:*
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Resource:
              Fn::GetAtt:
                - awsWAFLogsHyperswitch5BCE71D5
                - Arn
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - awsWAFLogsHyperswitch5BCE71D5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - awsWAFLogsHyperswitch5BCE71D5
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: hyperswitch/awsWAFLogsHyperswitch/Policy/Resource
  awsWAFLogsHyperswitchAutoDeleteObjectsCustomResource84F9602E:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: awsWAFLogsHyperswitch5BCE71D5
    DependsOn:
      - awsWAFLogsHyperswitchPolicyD9537684
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/awsWAFLogsHyperswitch/AutoDeleteObjectsCustomResource/Default
  ExternalAppLoadBalancer10BDAD88:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Name: external-app-lb
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - HSLBSecurityGroup4A3E3CBA
            - GroupId
      Subnets:
        - Ref: hyperswitchvpcexternalincomingzoneSubnet1Subnet59CE22A9
        - Ref: hyperswitchvpcexternalincomingzoneSubnet2Subnet51739B68
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      Type: application
    DependsOn:
      - hyperswitchvpcexternalincomingzoneSubnet1DefaultRoute2F32AE05
      - hyperswitchvpcexternalincomingzoneSubnet1RouteTableAssociationC9451618
      - hyperswitchvpcexternalincomingzoneSubnet2DefaultRoute2EDBCE30
      - hyperswitchvpcexternalincomingzoneSubnet2RouteTableAssociation22321931
      - HyperswitchWAFWebACLB97720B8
      - HyperswitchWAFWebACLLogging1C8A44B4
    Metadata:
      aws:cdk:path: hyperswitch/ExternalAppLoadBalancer/Resource
  WebACLAssociationToExtALB:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn:
        Ref: ExternalAppLoadBalancer10BDAD88
      WebACLArn:
        Fn::GetAtt:
          - HyperswitchWAFWebACLB97720B8
          - Arn
    Metadata:
      aws:cdk:path: hyperswitch/WebACLAssociation-To-ExtALB
  ConditionJson7698FD65:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
            - :aud":"sts.amazonaws.com","
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
            - :sub":["system:serviceaccount:loki:loki-grafana","system:serviceaccount:loki:loki"]}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/ConditionJson/Resource/Default
  HyperswitchLokiBucketF5EFF9DA:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: hs-loki-logs-storage-381491845955-af-south-1
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchLokiBucket/Resource
  GrafanaServiceAccountRole2110C247:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - ConditionJson7698FD65
                  - Value
            Effect: Allow
            Principal:
              Federated:
                Ref: HSEKSClusterOpenIdConnectProviderC4DC430F
        Version: "2012-10-17"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/GrafanaServiceAccountRole/Resource
  GrafanaServiceAccountRoleDefaultPolicy041A07E3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - HyperswitchLokiBucketF5EFF9DA
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - HyperswitchLokiBucketF5EFF9DA
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: GrafanaServiceAccountRoleDefaultPolicy041A07E3
      Roles:
        - Ref: GrafanaServiceAccountRole2110C247
    Metadata:
      aws:cdk:path: hyperswitch/GrafanaServiceAccountRole/DefaultPolicy/Resource
  GrafanaPolicyF5F7B3B1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudwatch:DescribeAlarmHistory
              - cloudwatch:DescribeAlarms
              - cloudwatch:DescribeAlarmsForMetric
              - cloudwatch:GetInsightRuleReport
              - cloudwatch:GetMetricData
              - cloudwatch:ListMetrics
            Effect: Allow
            Resource: "*"
            Sid: AllowReadingMetricsFromCloudWatch
          - Action:
              - logs:DescribeLogGroups
              - logs:GetLogEvents
              - logs:GetLogGroupFields
              - logs:GetQueryResults
              - logs:StartQuery
              - logs:StopQuery
            Effect: Allow
            Resource: "*"
            Sid: AllowReadingLogsFromCloudWatch
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeRegions
              - ec2:DescribeTags
            Effect: Allow
            Resource: "*"
            Sid: AllowReadingTagsInstancesRegionsFromEC2
          - Action: tag:GetResources
            Effect: Allow
            Resource: "*"
            Sid: AllowReadingResourcesForTags
        Version: "2012-10-17"
      PolicyName: GrafanaPolicyF5F7B3B1
      Roles:
        - Ref: GrafanaServiceAccountRole2110C247
    Metadata:
      aws:cdk:path: hyperswitch/GrafanaPolicy/Resource
  grafanaingresslb66766C37:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/grafana-ingress-lb
      GroupName: grafana-ingress-lb
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 41.132.66.14/32
          Description: from 41.132.66.14/32:443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 41.132.66.14/32
          Description: from 41.132.66.14/32:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/grafana-ingress-lb/Resource
  sdkBucketRole299CAFF4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/sdkBucketRole/Resource
  sdkBucketRoleDefaultPolicy7142DBA1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - arn:aws:logs:af-south-1:381491845955:log-group:/aws/codebuild/
                    - Ref: HyperswitchSDKEB053B7E
                    - :*
              - Fn::Join:
                  - ""
                  - - arn:aws:logs:af-south-1:381491845955:log-group:/aws/codebuild/
                    - Ref: HyperswitchSDKEB053B7E
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - arn:aws:codebuild:af-south-1:381491845955:report-group/
                  - Ref: HyperswitchSDKEB053B7E
                  - -*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - HyperswitchSDKBucketE66F5573
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - HyperswitchSDKBucketE66F5573
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: sdkBucketRoleDefaultPolicy7142DBA1
      Roles:
        - Ref: sdkBucketRole299CAFF4
    Metadata:
      aws:cdk:path: hyperswitch/sdkBucketRole/DefaultPolicy/Resource
  SDKBucketAccessPolicy5FF00031:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - elasticloadbalancing:DescribeLoadBalancers
              - s3:ListBucket
              - s3:getObject
              - s3:putObject
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SDKBucketAccessPolicy5FF00031
      Roles:
        - Ref: sdkBucketRole299CAFF4
    Metadata:
      aws:cdk:path: hyperswitch/SDKBucketAccessPolicy/Resource
  HyperswitchSDKEB053B7E:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: sdkBucket
            Type: PLAINTEXT
            Value:
              Ref: HyperswitchSDKBucketE66F5573
          - Name: envSdkUrl
            Type: PLAINTEXT
            Value:
              Fn::Join:
                - ""
                - - http://
                  - Fn::GetAtt:
                      - sdkDistributionCFDistribution1434D010
                      - DomainName
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      Name: HyperswitchSDK
      ServiceRole:
        Fn::GetAtt:
          - sdkBucketRole299CAFF4
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "install": {
                "commands": [
                  "export envBackendUrl=\"http://$(aws elbv2 describe-load-balancers --name 'hyperswitch' --query 'LoadBalancers[].DNSName' --output text)\"",
                  "git clone --branch v0.27.2 https://github.com/juspay/hyperswitch-web",
                  "cd hyperswitch-web",
                  "n install 18",
                  "npm -v",
                  "node --version",
                  "npm install",
                  "npm run re:build"
                ]
              },
              "build": {
                "commands": "envSdkUrl=$envSdkUrl envBackendUrl=$envBackendUrl npm run build:integ"
              },
              "post_build": {
                "commands": [
                  "aws s3 cp --recursive dist/integ/ s3://$sdkBucket/0.27.2/v0"
                ]
              }
            }
          }
        Type: NO_SOURCE
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    DependsOn:
      - HSEKSClusterchartLokiController4F50C172
    Metadata:
      aws:cdk:path: hyperswitch/HyperswitchSDK/Resource
  SdkAssetsUploadLambdaRole884A45F9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/SdkAssetsUploadLambdaRole/Resource
  SdkAssetsUploadLambdaPolicyBC7CB1AB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codebuild:StartBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - HyperswitchSDKEB053B7E
                - Arn
        Version: "2012-10-17"
      PolicyName: SdkAssetsUploadLambdaPolicyBC7CB1AB
      Roles:
        - Ref: SdkAssetsUploadLambdaRole884A45F9
    Metadata:
      aws:cdk:path: hyperswitch/SdkAssetsUploadLambdaPolicy/Resource
  SdkAssetsUploadLambdaLogsPolicy257E688E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SdkAssetsUploadLambdaLogsPolicy257E688E
      Roles:
        - Ref: SdkAssetsUploadLambdaRole884A45F9
    Metadata:
      aws:cdk:path: hyperswitch/SdkAssetsUploadLambdaLogsPolicy/Resource
  SdkAssetsUploadLambda434F31DC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          import os
          import json
          import urllib3

          http = urllib3.PoolManager()

          def send(event, context, responseStatus, responseData, physicalResourceId=None, noEcho=False, reason=None):
              responseUrl = event['ResponseURL']

              responseBody = {
                  'Status': responseStatus,
                  'Reason': reason or "See the details in CloudWatch Log Stream: {}".format(context.log_stream_name),
                  'PhysicalResourceId': physicalResourceId or context.log_stream_name,
                  'StackId': event['StackId'],
                  'RequestId': event['RequestId'],
                  'LogicalResourceId': event['LogicalResourceId'],
                  'NoEcho': noEcho,
                  'Data': responseData
              }

              json_responseBody = json.dumps(responseBody)

              print("Response body:")
              print(json_responseBody)

              headers = {
                  'content-type': '',
                  'content-length': str(len(json_responseBody))
              }

              try:
                  response = http.request(
                      'PUT', responseUrl, headers=headers, body=json_responseBody)
                  print("Status code:", response.status)
                  return responseBody

              except Exception as e:

                  print("send(..) failed executing http.request(..):", e)
                  return {}


          def lambda_handler(event, context):
              # get the details from the codebuild project from the environment variables and trigger the codebuild project
              if event['RequestType'] == 'Create':
                  try:
                      codebuild = boto3.client('codebuild')
                      response = codebuild.start_build(
                          projectName=os.environ['PROJECT_NAME'],
                      )
                      send(event, context, "SUCCESS", {"message": "CodeBuild project started"})
                  except Exception as e:
                      send(event, context, "FAILED", {"message": str(e)})
              else:
                  send(event, context, "SUCCESS", {"message": "No action required"})

              return '{ "status": 200, "message": "success" }'
      Environment:
        Variables:
          PROJECT_NAME:
            Ref: HyperswitchSDKEB053B7E
      Handler: index.lambda_handler
      Role:
        Fn::GetAtt:
          - SdkAssetsUploadLambdaRole884A45F9
          - Arn
      Runtime: python3.9
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      Timeout: 900
    DependsOn:
      - SdkAssetsUploadLambdaRole884A45F9
    Metadata:
      aws:cdk:path: hyperswitch/SdkAssetsUploadLambda/Resource
  SdkAssetsUploadCR:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - SdkAssetsUploadLambda434F31DC
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/SdkAssetsUploadCR/Default
  hyperswitchinternaljumpec2SG203B314E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/hyperswitch_internal_jump_ec2-SG
      GroupName: hyperswitch_internal_jump_ec2-SG
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_internal_jump_ec2-SG/Resource
  hyperswitchinternaljumpec2SGfromhyperswitchhyperswitchexternaljumpec2SGC9D4809122A4F3C501:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchhyperswitchexternaljumpec2SGC9D48091:22
      FromPort: 22
      GroupId:
        Fn::GetAtt:
          - hyperswitchinternaljumpec2SG203B314E
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - hyperswitchexternaljumpec2SG1510381F
          - GroupId
      ToPort: 22
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_internal_jump_ec2-SG/from hyperswitchhyperswitchexternaljumpec2SGC9D48091:22
  hyperswitchinternaljumpec2SGtohyperswitchHyperswitchdbSGAC2DB2F95432F5AEF7FF:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: internal jump box
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - HyperswitchdbSG3CDBCC59
          - GroupId
      FromPort: 5432
      GroupId:
        Fn::GetAtt:
          - hyperswitchinternaljumpec2SG203B314E
          - GroupId
      IpProtocol: tcp
      ToPort: 5432
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_internal_jump_ec2-SG/to hyperswitchHyperswitchdbSGAC2DB2F9:5432
  hyperswitchinternaljumpec2SGfromhyperswitchHyperswitchelasticacheSG5D6AEA7A63790BEBCEDE:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchHyperswitchelasticacheSG5D6AEA7A:6379
      FromPort: 6379
      GroupId:
        Fn::GetAtt:
          - hyperswitchinternaljumpec2SG203B314E
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - HyperswitchelasticacheSGD4F727DC
          - GroupId
      ToPort: 6379
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_internal_jump_ec2-SG/from hyperswitchHyperswitchelasticacheSG5D6AEA7A:6379
  hyperswitchinternaljumpec2keypair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: hyperswitch_internal_jump_ec2-keypair
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_internal_jump_ec2-keypair
  hyperswitchinternaljumpec2InstanceRoleECA68846:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch_internal_jump_ec2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_internal_jump_ec2/InstanceRole/Resource
  hyperswitchinternaljumpec2InstanceProfileFF73BF14:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: hyperswitchinternaljumpec2InstanceRoleECA68846
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_internal_jump_ec2/InstanceProfile
  hyperswitchinternaljumpec2237C1A10:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: af-south-1a
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: true
            VolumeSize: 15
      IamInstanceProfile:
        Ref: hyperswitchinternaljumpec2InstanceProfileFF73BF14
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.medium
      KeyName: hyperswitch_internal_jump_ec2-keypair
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: "0"
          GroupSet:
            - Fn::GetAtt:
                - hyperswitchinternaljumpec2SG203B314E
                - GroupId
          SubnetId:
            Ref: hyperswitchvpcutilszoneSubnet1Subnet6DAEAEB9
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch_internal_jump_ec2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - hyperswitchinternaljumpec2InstanceRoleECA68846
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_internal_jump_ec2/Resource
  hyperswitchexternaljumpec2SG1510381F:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/hyperswitch_external_jump_ec2-SG
      GroupName: hyperswitch_external_jump_ec2-SG
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_external_jump_ec2-SG/Resource
  hyperswitchexternaljumpec2SGtohyperswitchhyperswitchinternaljumpec2SG4037E91A22D314FF9B:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: to hyperswitchhyperswitchinternaljumpec2SG4037E91A:22
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - hyperswitchinternaljumpec2SG203B314E
          - GroupId
      FromPort: 22
      GroupId:
        Fn::GetAtt:
          - hyperswitchexternaljumpec2SG1510381F
          - GroupId
      IpProtocol: tcp
      ToPort: 22
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_external_jump_ec2-SG/to hyperswitchhyperswitchinternaljumpec2SG4037E91A:22
  hyperswitchexternaljumpec2SGfromhyperswitchhyperswitchexternaljumpec2SGC9D480913768943D0E7C1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchhyperswitchexternaljumpec2SGC9D48091:37689
      FromPort: 37689
      GroupId:
        Fn::GetAtt:
          - hyperswitchexternaljumpec2SG1510381F
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - hyperswitchexternaljumpec2SG1510381F
          - GroupId
      ToPort: 37689
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_external_jump_ec2-SG/from hyperswitchhyperswitchexternaljumpec2SGC9D48091:37689
  hyperswitchexternaljumpec2SGtohyperswitchvpcesg91AB3C8E4436658CD52:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: to hyperswitchvpcesg91AB3C8E:443
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - vpcesgF9221CEF
          - GroupId
      FromPort: 443
      GroupId:
        Fn::GetAtt:
          - hyperswitchexternaljumpec2SG1510381F
          - GroupId
      IpProtocol: tcp
      ToPort: 443
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_external_jump_ec2-SG/to hyperswitchvpcesg91AB3C8E:443
  hyperswitchexternaljumpec2keypair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: hyperswitch_external_jump_ec2-keypair
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_external_jump_ec2-keypair
  hyperswitchexternaljumpec2InstanceRoleEE902A55:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch_external_jump_ec2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_external_jump_ec2/InstanceRole/Resource
  hyperswitchexternaljumpec2InstanceProfile5F37E115:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: hyperswitchexternaljumpec2InstanceRoleEE902A55
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_external_jump_ec2/InstanceProfile
  hyperswitchexternaljumpec2B76B8FBF:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: af-south-1a
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: true
            VolumeSize: 15
      IamInstanceProfile:
        Ref: hyperswitchexternaljumpec2InstanceProfile5F37E115
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.medium
      KeyName: hyperswitch_external_jump_ec2-keypair
      SecurityGroupIds:
        - Fn::GetAtt:
            - hyperswitchexternaljumpec2SG1510381F
            - GroupId
      SubnetId:
        Ref: hyperswitchvpcmanagementzoneSubnet1SubnetEEE4E472
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch_external_jump_ec2
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - hyperswitchexternaljumpec2InstanceRoleEE902A55
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch_external_jump_ec2/Resource
  hyperswitchssmkmskeyC9530FD1:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS key for encrypting the objects in an S3 bucket
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::381491845955:root
            Resource: "*"
        Version: "2012-10-17"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      PendingWindowInDays: 7
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-ssm-kms-key/Resource
  hyperswitchssmkmskeyAlias13380987:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/hyperswitch-ssm-kms-key
      TargetKeyId:
        Fn::GetAtt:
          - hyperswitchssmkmskeyC9530FD1
          - Arn
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-ssm-kms-key/Alias/Resource
  SessionManagerPolicies50490791:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: SessionManagerPolicies
      ManagedPolicyName: SessionManagerPolicies-381491845955-af-south-1
      Path: /
      PolicyDocument:
        Statement:
          - Action:
              - kms:GenerateDataKey
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutLogEvents
              - s3:GetEncryptionConfiguration
              - ssm:UpdateInstanceInformation
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
            Effect: Allow
            Resource: "*"
          - Action: kms:Decrypt
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - hyperswitchssmkmskeyC9530FD1
                - Arn
        Version: "2012-10-17"
      Roles:
        - Ref: hyperswitchexternaljumpec2InstanceRoleEE902A55
    Metadata:
      aws:cdk:path: hyperswitch/SessionManagerPolicies/Resource
  vpcesgF9221CEF:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: stack vpce sg
      SecurityGroupEgress:
        - CidrIp: 255.255.255.255/32
          Description: Disallow all traffic
          FromPort: 252
          IpProtocol: icmp
          ToPort: 86
      SecurityGroupIngress:
        - CidrIp: 10.63.0.0/16
          Description: from 10.63.0.0/16:443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp:
            Fn::GetAtt:
              - hyperswitchvpc6E98958A
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - hyperswitchvpc6E98958A
                    - CidrBlock
                - :443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/vpce-sg/Resource
  SSMMessagesEPF5AEBF02:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - vpcesgF9221CEF
            - GroupId
      ServiceName: com.amazonaws.af-south-1.ssmmessages
      SubnetIds:
        - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD
        - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B
      VpcEndpointType: Interface
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/SSMMessagesEP/Resource
  IncomingWebServerSSMEPD5DFBAC2:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - vpcesgF9221CEF
            - GroupId
      ServiceName: com.amazonaws.af-south-1.ssm
      SubnetIds:
        - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD
        - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B
      VpcEndpointType: Interface
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/IncomingWebServerSSMEP/Resource
  EC2MessagesEP80EAD0A9:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - vpcesgF9221CEF
            - GroupId
      ServiceName: com.amazonaws.af-south-1.ec2messages
      SubnetIds:
        - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet1Subnet707C13DD
        - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet2Subnet6CA97A9B
      VpcEndpointType: Interface
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/EC2MessagesEP/Resource
  SecretsManagerEP76D4D1A3:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - vpcesgF9221CEF
            - GroupId
      ServiceName: com.amazonaws.af-south-1.secretsmanager
      SubnetIds:
        - Ref: hyperswitchvpclockerdatabasezoneSubnet1Subnet3CAE1D64
        - Ref: hyperswitchvpclockerdatabasezoneSubnet2Subnet3578500C
      VpcEndpointType: Interface
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/SecretsManagerEP/Resource
  S3VPCEndpoint5A4421E0:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - Ref: hyperswitchvpcisolatedsubnet1Subnet1RouteTableF564B640
        - Ref: hyperswitchvpcisolatedsubnet1Subnet2RouteTable47634573
        - Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet1RouteTable02F70E2B
        - Ref: hyperswitchvpcdatabaseisolatedsubnet1Subnet2RouteTableE4719469
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet1RouteTable391C093D
        - Ref: hyperswitchvpceksworkernodesonezoneSubnet2RouteTable9FB068B2
        - Ref: hyperswitchvpcutilszoneSubnet1RouteTable343BF850
        - Ref: hyperswitchvpcutilszoneSubnet2RouteTable7D41147C
        - Ref: hyperswitchvpcservicelayerzoneSubnet1RouteTable5B412BEC
        - Ref: hyperswitchvpcservicelayerzoneSubnet2RouteTable3FB66943
        - Ref: hyperswitchvpcdatastackzoneSubnet1RouteTable87E77B2D
        - Ref: hyperswitchvpcdatastackzoneSubnet2RouteTableDF6EDADC
        - Ref: hyperswitchvpcoutgoingproxylbzoneSubnet1RouteTableA6A1CF9A
        - Ref: hyperswitchvpcoutgoingproxylbzoneSubnet2RouteTable27804EB0
        - Ref: hyperswitchvpcoutgoingproxyzoneSubnet1RouteTable2C38063F
        - Ref: hyperswitchvpcoutgoingproxyzoneSubnet2RouteTableFCB35384
        - Ref: hyperswitchvpcincomingnpcizoneSubnet1RouteTableD1A7BD32
        - Ref: hyperswitchvpcincomingnpcizoneSubnet2RouteTableEBA207F5
        - Ref: hyperswitchvpcekscontrolplanezoneSubnet1RouteTable993E6DEF
        - Ref: hyperswitchvpcekscontrolplanezoneSubnet2RouteTable01F459C5
        - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet1RouteTable233FC848
        - Ref: hyperswitchvpcincomingwebenvoyzoneSubnet2RouteTable0679E2F4
        - Ref: hyperswitchvpcpublicsubnet1Subnet1RouteTable0C4CDC68
        - Ref: hyperswitchvpcpublicsubnet1Subnet2RouteTable21521D41
        - Ref: hyperswitchvpcmanagementzoneSubnet1RouteTableD6132081
        - Ref: hyperswitchvpcmanagementzoneSubnet2RouteTable329E1D69
        - Ref: hyperswitchvpcexternalincomingzoneSubnet1RouteTableA40E4EAD
        - Ref: hyperswitchvpcexternalincomingzoneSubnet2RouteTable018A90E4
        - Ref: hyperswitchvpclockerdatabasezoneSubnet1RouteTableFBE2F9CA
        - Ref: hyperswitchvpclockerdatabasezoneSubnet2RouteTableA677358E
        - Ref: hyperswitchvpcdatabasezoneSubnet1RouteTableD2EC564B
        - Ref: hyperswitchvpcdatabasezoneSubnet2RouteTableED60F558
        - Ref: hyperswitchvpclockerserverzoneSubnet1RouteTable84449A93
        - Ref: hyperswitchvpclockerserverzoneSubnet2RouteTable995B0544
        - Ref: hyperswitchvpcelasticachezoneSubnet1RouteTable595C60D8
        - Ref: hyperswitchvpcelasticachezoneSubnet2RouteTableCDBE3EE2
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .s3
      VpcEndpointType: Gateway
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/S3VPCEndpoint/Resource
  KMSVPCEndpoint4C36925C:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - vpcesgF9221CEF
            - GroupId
      ServiceName: com.amazonaws.af-south-1.kms
      SubnetIds:
        - Ref: hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5
        - Ref: hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4
      VpcEndpointType: Interface
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/KMSVPCEndpoint/Resource
  RdsEndpointSecurityGroup912A1026:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/RdsEndpoint/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - hyperswitchvpc6E98958A
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - hyperswitchvpc6E98958A
                    - CidrBlock
                - :443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Stack
          Value: Hyperswitch
        - Key: StackName
          Value: hyperswitch
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/RdsEndpoint/SecurityGroup/Resource
  RdsEndpoint113053B0:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - RdsEndpointSecurityGroup912A1026
            - GroupId
      ServiceName: com.amazonaws.af-south-1.rds
      SubnetIds:
        - Ref: hyperswitchvpcdatabasezoneSubnet1Subnet359DF5A5
        - Ref: hyperswitchvpcdatabasezoneSubnet2Subnet8336D1D4
      VpcEndpointType: Interface
      VpcId:
        Ref: hyperswitchvpc6E98958A
    Metadata:
      aws:cdk:path: hyperswitch/RdsEndpoint/Resource
  HSAWSLoadBalancerControllerIAMPolicyInfo4FB07E73:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - acm:DescribeCertificate
              - acm:ListCertificates
              - cognito-idp:DescribeUserPoolClient
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateSecurityGroup
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeCoipPools
              - ec2:DescribeInstances
              - ec2:DescribeInternetGateways
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeTags
              - ec2:DescribeVpcs
              - ec2:GetCoipPoolUsage
              - ec2:RevokeSecurityGroupIngress
              - elasticloadbalancing:AddListenerCertificates
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:DeleteRule
              - elasticloadbalancing:DescribeListenerCertificates
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:DescribeSSLPolicies
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:ModifyRule
              - elasticloadbalancing:RemoveListenerCertificates
              - elasticloadbalancing:SetWebAcl
              - iam:CreateServiceLinkedRole
              - iam:GetServerCertificate
              - iam:ListServerCertificates
              - shield:CreateProtection
              - shield:DeleteProtection
              - shield:DescribeProtection
              - shield:GetSubscriptionState
              - waf-regional:AssociateWebACL
              - waf-regional:DisassociateWebACL
              - waf-regional:GetWebACL
              - waf-regional:GetWebACLForResource
              - wafv2:AssociateWebACL
              - wafv2:DisassociateWebACL
              - wafv2:GetWebACL
              - wafv2:GetWebACLForResource
            Effect: Allow
            Resource: "*"
          - Action: ec2:CreateTags
            Condition:
              StringEquals:
                ec2:CreateAction: CreateSecurityGroup
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: arn:aws:ec2:*:*:security-group/*
          - Action:
              - ec2:CreateTags
              - ec2:DeleteTags
            Condition:
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "true"
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: arn:aws:ec2:*:*:security-group/*
          - Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:DeleteSecurityGroup
              - ec2:RevokeSecurityGroupIngress
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:ModifyTargetGroup
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:SetIpAddressType
              - elasticloadbalancing:SetSecurityGroups
              - elasticloadbalancing:SetSubnets
            Condition:
              "Null":
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateTargetGroup
            Condition:
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
            Condition:
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "true"
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource:
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*
              - arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
          - Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
            Effect: Allow
            Resource:
              - arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*
          - Action:
              - elasticloadbalancing:DeregisterTargets
              - elasticloadbalancing:RegisterTargets
            Effect: Allow
            Resource: arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
        Version: "2012-10-17"
      PolicyName: HSAWSLoadBalancerControllerIAMPolicyInfo4FB07E73
      Roles:
        - Ref: HSNodegroupRoleA5CDE24A
    Metadata:
      aws:cdk:path: hyperswitch/HSAWSLoadBalancerControllerIAMPolicyInfo/Resource
  HSAWSLoadBalancerControllerIAMInlinePolicyInfo05E49DD2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
            Effect: Allow
            Resource:
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*
              - arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
        Version: "2012-10-17"
      PolicyName: HSAWSLoadBalancerControllerIAMInlinePolicyInfo05E49DD2
      Roles:
        - Ref: HSNodegroupRoleA5CDE24A
    Metadata:
      aws:cdk:path: hyperswitch/HSAWSLoadBalancerControllerIAMInlinePolicyInfo/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31UyW7bMBD9lt4ZtnHQD5CVpW7SxHCK9GiMqJHCWCIFLjYMQf/eIbU2CXqahUPyzbxHrvjl90v+7Quc7IXIDxeVzHj77EAcGKX2LYoVb18awdJCvWxTtvVZJcWzzxS6kJu9nfYOf0NW4Zyfc4m1WkhwUqupODg3m20wj+DuwOEJzmxr5JHc+eCNcmjIHwt6JEOUOML6WqNy7BmFN9Kd74z2TcTw38RGlQat/ZC/mdL3eN6CNGyjrAMlsAcz+BFVAQJpODcqb7RUboA2hQPGRUXHsALrpCDQyNtpUBPENCyklbd0escsCoPO1qCgREPExHiAHLze/AZToluMYip4v9Ixk1veXoODDOx4EXsH4nr9ITFWxmAcQsck1Lzd6Z7zaLea9BFJmr2xfmt0IanmV+wnnwv+SXRM6BwzL6uct7TlDUXsaHBpKld7sJbmwpNgKObt2osDujX1xHo37Bi83sy3LeOOVVBnOfD21isxynPpP8AZzQsaSzHRd6DxjcNITjbx7pXd+ywqFC01Igu0jj01qDZ5qpUiyIT8KHPa8EiNleNQ5+AHVnX6CibwaY5SYCKE9oGtQ03XkQ4HObKkkhC1GR2aVKV9XhitHG+fjCyloq0k301OZJOio6RCzW2o+bxiWv6D2bW0zsjMj80v446doDiuomqpNEkf4nh0SWeW1GkhS2+mF95XLJ79JP1KQ55BRYKgfeG8pGmIilj0QGvruNZrbRl3Hduh1d6El0gE6HoOSXyfL42jj8qIcqHPLQAeeN9Xgd79gRgUruL3vY2cx9lplcuxpZ+2t/33SM6Td43vtQkGaoxvVhGt/M1+Pa6u+GX4Wt+slBeG6JQ18l1v/wLdPIQ9dwUAAA==
    Metadata:
      aws:cdk:path: hyperswitch/CDKMetadata/Default
Conditions:
  HSEKSClusterHasEcrPublic1090A4D3:
    Fn::Equals:
      - Ref: AWS::Partition
      - aws
Outputs:
  SdkDistribution:
    Value:
      Fn::GetAtt:
        - sdkDistributionCFDistribution1434D010
        - DomainName
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
